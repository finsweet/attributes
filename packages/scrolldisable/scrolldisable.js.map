{
  "version": 3,
  "sources": ["../../node_modules/just-debounce/index.js", "../../node_modules/@finsweet/ts-utils/dist/components/Debug.js", "../../node_modules/@finsweet/ts-utils/dist/webflow/css.js", "../../node_modules/@finsweet/ts-utils/dist/helpers/isScrollable.js", "../../node_modules/@finsweet/ts-utils/dist/helpers/isVisible.js", "../../global/factory/selectors.ts", "../../global/constants/attributes.ts", "../../global/factory/assess.ts", "../../global/factory/init.ts", "src/constants.ts", "../../node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js", "src/scroll.ts", "src/click.ts", "src/display.ts", "src/init.ts", "src/index.ts"],
  "sourcesContent": ["module.exports = debounce;\n\nfunction debounce(fn, delay, atStart, guarantee) {\n  var timeout;\n  var args;\n  var self;\n\n  return function debounced() {\n    self = this;\n    args = Array.prototype.slice.call(arguments);\n\n    if (timeout && (atStart || guarantee)) {\n      return;\n    } else if (!atStart) {\n      clear();\n\n      timeout = setTimeout(run, delay);\n      return timeout;\n    }\n\n    timeout = setTimeout(clear, delay);\n    fn.apply(self, args);\n\n    function run() {\n      clear();\n      fn.apply(self, args);\n    }\n\n    function clear() {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n}\n", "const alertTypes = ['info', 'error'];\r\nexport class Debug {\r\n    static alertsActivated = false;\r\n    static activateAlerts() {\r\n        this.alertsActivated = true;\r\n    }\r\n    static alert(text, type) {\r\n        if (this.alertsActivated)\r\n            window.alert(text);\r\n        if (type === 'error')\r\n            throw new Error(text);\r\n    }\r\n}\r\n", "export const CURRENT_CSS_CLASS = 'w--current';\r\nexport const RICH_TEXT_BLOCK_CSS_CLASS = 'w-richtext';\r\nexport const HTML_EMBED_CSS_CLASS = 'w-embed';\r\nexport const SLIDER_CSS_CLASSES = {\r\n    slider: 'w-slider',\r\n    slide: 'w-slide',\r\n    sliderMask: 'w-slider-mask',\r\n    sliderNav: 'w-slider-nav',\r\n    sliderDot: 'w-slider-dot',\r\n    activeSliderDot: 'w-active',\r\n};\r\nexport const TABS_CSS_CLASSES = {\r\n    tabs: 'w-tabs',\r\n    tabsContent: 'w-tab-content',\r\n    tabPane: 'w-tab-pane',\r\n    tabsMenu: 'w-tab-menu',\r\n    tabLink: 'w-tab-link',\r\n    activeTab: 'w--tab-active',\r\n};\r\nexport const NAVBAR_CSS_CLASSES = {\r\n    navMenu: 'w-nav-menu',\r\n};\r\nexport const CMS_CSS_CLASSES = {\r\n    wrapper: 'w-dyn-list',\r\n    list: 'w-dyn-items',\r\n    item: 'w-dyn-item',\r\n    paginationWrapper: 'w-pagination-wrapper',\r\n    paginationNext: 'w-pagination-next',\r\n    paginationPrevious: 'w-pagination-previous',\r\n    pageCount: 'w-page-count',\r\n    emptyState: 'w-dyn-empty',\r\n};\r\nexport const FORM_CSS_CLASSES = {\r\n    formBlock: 'w-form',\r\n    checkboxField: 'w-checkbox',\r\n    checkboxInput: 'w-checkbox-input',\r\n    radioField: 'w-radio',\r\n    radioInput: 'w-radio-input',\r\n    checkboxOrRadioLabel: 'w-form-label',\r\n    checkboxOrRadioFocus: 'w--redirected-focus',\r\n    checkboxOrRadioChecked: 'w--redirected-checked',\r\n    successMessage: 'w-form-done',\r\n    errorMessage: 'w-form-fail',\r\n};\r\nexport const DROPDOWN_CSS_CLASSES = {\r\n    dropdown: 'w-dropdown',\r\n    dropdownToggle: 'w-dropdown-toggle',\r\n    dropdownList: 'w-dropdown-list',\r\n};\r\nexport const COMMERCE_CSS_CLASSES = {\r\n    addToCartForm: 'w-commerce-commerceaddtocartform',\r\n};\r\nexport const LIGHTBOX_CSS_CLASSES = {\r\n    trigger: 'w-lightbox',\r\n};\r\n", "export const isScrollable = (element) => {\r\n    const { overflow } = getComputedStyle(element);\r\n    return overflow === 'auto' || overflow === 'scroll';\r\n};\r\n", "export const isVisible = (element) => !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\r\n", "import type { AttributeOperator, AttributeStaticValue, AttributeValue } from '$global/types/selectors';\n\n/**\n * Creates a dynamic attribute value.\n * @param value The static attribute value.\n * @returns A callback for generating new attribute values by index.\n */\nexport const generateDynamicAttibuteValue = (value: string) => {\n  return (index?: number): string => `${value}${index ? `-${index}` : ''}`;\n};\n\n/**\n * @returns A `getSelector` callback for the passed `attributes` object.\n * @param attributes An object containing all attribute keys and values.\n */\nexport const generateSelectors = <\n  Attributes extends {\n    [name: string]: {\n      key: string;\n      values?: {\n        [valueKey: string]: AttributeValue;\n      };\n    };\n  }\n>(\n  attributes: Attributes\n) => {\n  /**\n   * Generates a query selector based on the preferences.\n   * @param name The name of the attribute.\n   * @param valueKey The value of the attribute.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @returns The query selector based on the preferences.\n   */\n  const getSelector = <Name extends keyof Attributes, ValueKey extends keyof Attributes[Name]['values']>(\n    name: Name,\n    valueKey?: ValueKey,\n    params?: Attributes[Name]['values'][ValueKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        }\n  ): string => {\n    const attribute = attributes[name];\n\n    const { key: attributeKey, values } = attribute;\n    let attributeValue: string;\n\n    if (!valueKey) return `[${attributeKey}]`;\n\n    const value = values?.[valueKey] as AttributeValue;\n\n    if (typeof value === 'string') attributeValue = value;\n    else attributeValue = value(params && 'instanceIndex' in params ? params.instanceIndex : undefined);\n\n    if (!params?.operator) return `[${attributeKey}=\"${attributeValue}\"]`;\n\n    switch (params.operator) {\n      case 'prefixed':\n        return `[${attributeKey}^=\"${attributeValue}\"]`;\n      case 'suffixed':\n        return `[${attributeKey}$=\"${attributeValue}\"]`;\n      case 'contains':\n        return `[${attributeKey}*=\"${attributeValue}\"]`;\n    }\n  };\n\n  /**\n   * Queries an element using the generated element selectors.\n   * @param elementKey The element key.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @param params.scope The scope for the query. Defaults to `document`.\n   */\n  const queryElement = <\n    E extends Element = Element,\n    ElementKey extends keyof Attributes['element']['values'] = keyof Attributes['element']['values']\n  >(\n    elementKey: ElementKey,\n    params?: { scope?: ParentNode } & (Attributes['element']['values'][ElementKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        })\n  ) => {\n    const selector = getSelector('element', elementKey, params);\n\n    return (params?.scope || document).querySelector<E>(selector);\n  };\n\n  return [getSelector, queryElement] as const;\n};\n", "import { generateSelectors } from '$global/factory/selectors';\n\n/**\n * Constants\n */\nexport const ATTRIBUTES_PREFIX = 'fs-attributes';\n\nexport const ATTRIBUTES = {\n  /**\n   * Defines if an Attributes' `<script>` should prevent automatically loading the library.\n   */\n  preventLoad: { key: `${ATTRIBUTES_PREFIX}-preventload` },\n\n  /**\n   * Defines if an Attributes' `<script>` is set to Debug Mode.\n   */\n  debugMode: { key: `${ATTRIBUTES_PREFIX}-debug` },\n\n  /**\n   * Defines the source of an attribute script.\n   */\n  src: { key: 'src', values: { finsweet: '@finsweet/attributes' } },\n\n  /**\n   * Defines a developer script that is not imported from JsDelivr.\n   */\n  dev: { key: `${ATTRIBUTES_PREFIX}-dev` },\n} as const;\n\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\n", "import { Debug } from '@finsweet/ts-utils';\n\nimport { ATTRIBUTES } from '../constants/attributes';\nimport { GlobalAttributeParams } from '../types/global';\n\n/**\n * Checks the global params of the Attribute `<script>`.\n * @param script The `<script>` element.\n * @returns The {@link GlobalAttributeParams}.\n */\n\nexport const assessScript = (): GlobalAttributeParams => {\n  const { currentScript } = document;\n  const { preventLoad, debugMode } = ATTRIBUTES;\n\n  // Check if the Attribute should not be automatically loaded\n  const preventsLoad = typeof currentScript?.getAttribute(preventLoad.key) === 'string';\n\n  // Check if Debug Mode is activated\n  if (typeof currentScript?.getAttribute(debugMode.key) === 'string') Debug.activateAlerts();\n\n  return { preventsLoad };\n};\n", "import { ATTRIBUTES, getSelector } from '$global/constants/attributes';\r\nimport type { FsAttributes, FsAttributesCallback } from '$global/types/global';\r\n\r\n/**\r\n * Makes sure the window object is defined.\r\n */\r\nexport const initAttributes = () => {\r\n  if (window.fsAttributes && !Array.isArray(window.fsAttributes)) return;\r\n\r\n  const fsAttributes = {\r\n    cms: {},\r\n    push(...args) {\r\n      for (const [attributeName, callback] of args) this[attributeName]?.loading?.then(callback);\r\n    },\r\n  } as FsAttributes;\r\n\r\n  initLoadPromises(fsAttributes);\r\n  runExistingCallbacks(fsAttributes);\r\n\r\n  window.fsAttributes = fsAttributes;\r\n  window.FsAttributes = window.fsAttributes;\r\n};\r\n\r\n/**\r\n * Sets a loading promise for each attribute package.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst initLoadPromises = (fsAttributes: FsAttributes) => {\r\n  const srcSelector = getSelector('src', 'finsweet', { operator: 'contains' });\r\n  const devSelector = getSelector('dev');\r\n  const scripts = [...document.querySelectorAll<HTMLScriptElement>(`script${srcSelector}, script${devSelector}`)];\r\n\r\n  const attributes = scripts.reduce<string[]>((acc, script) => {\r\n    const attributeName = script.getAttribute(ATTRIBUTES.dev.key) || script.src.match(/[\\w-. ]+(?=(\\.js)$)/)?.[0];\r\n    if (attributeName && !acc.includes(attributeName)) acc.push(attributeName);\r\n\r\n    return acc;\r\n  }, []);\r\n\r\n  for (const attributeName of attributes) {\r\n    fsAttributes[attributeName] = {};\r\n    const attribute = fsAttributes[attributeName];\r\n\r\n    attribute.loading = new Promise((resolve) => {\r\n      attribute.resolve = (value: unknown) => {\r\n        resolve(value);\r\n        delete attribute.resolve;\r\n      };\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Runs the existing callbacks in the `window.fsAttributes` object.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst runExistingCallbacks = (fsAttributes: FsAttributes) => {\r\n  const existingCallbacks = Array.isArray(window.fsAttributes) ? (window.fsAttributes as FsAttributesCallback[]) : [];\r\n  fsAttributes.push(...existingCallbacks);\r\n};\r\n", "import { generateSelectors } from '$global/factory/selectors';\r\n\r\nexport const ATTRIBUTE = 'scrolldisable';\r\n\r\nconst ATTRIBUTES_PREFIX = `fs-${ATTRIBUTE}`;\r\n\r\nexport const WHEN_VISIBLE_ELEMENT_KEY = 'when-visible';\r\nexport const ENABLE_ELEMENT_KEY = 'enable';\r\nexport const DISABLE_ELEMENT_KEY = 'disable';\r\nexport const TOGGLE_ELEMENT_KEY = 'toggle';\r\nexport const NAV_ELEMENT_KEY = 'smart-nav';\r\nexport const PRESERVE_ELEMENT_KEY = 'preserve';\r\n\r\nexport const MEDIA_SETTING_KEY = 'media';\r\nexport const GAP_SETTING_KEY = 'gap';\r\n\r\nexport const ATTRIBUTES = {\r\n  /**\r\n   * Defines an element that will act as trigger based on its value.\r\n   */\r\n  element: {\r\n    key: `${ATTRIBUTES_PREFIX}-element`,\r\n    values: {\r\n      /**\r\n       * Scrolling will be disabled/enabled when this element becomes visible/hidden.\r\n       */\r\n      whenVisible: WHEN_VISIBLE_ELEMENT_KEY,\r\n\r\n      /**\r\n       * Scrolling will be enabled when this element is clicked.\r\n       */\r\n      enable: ENABLE_ELEMENT_KEY,\r\n\r\n      /**\r\n       * Scrolling will be disabled when this element is clicked.\r\n       */\r\n      disable: DISABLE_ELEMENT_KEY,\r\n\r\n      /**\r\n       * Scrolling will be disabled/enabled when this element is clicked.\r\n       */\r\n      toggle: TOGGLE_ELEMENT_KEY,\r\n\r\n      /**\r\n       * Specific for `Navbar` components.\r\n       * Scrolling will be disabled/enabled when the `Nav Menu` is open/closed.\r\n       */\r\n      nav: NAV_ELEMENT_KEY,\r\n\r\n      /**\r\n       * Applied on elements that must preserve scrolling when the page's scrolling is disabled.\r\n       */\r\n      preserve: PRESERVE_ELEMENT_KEY,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Used to define a media query that restricts when an element acts as a trigger.\r\n   */\r\n  matchMedia: { key: `${ATTRIBUTES_PREFIX}-${MEDIA_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines if the scrollbar gap must be reserved when disabling scrolling.\r\n   * It's set to the `<script>` tag, `true` by default.\r\n   */\r\n  gap: { key: `${ATTRIBUTES_PREFIX}-${GAP_SETTING_KEY}`, values: { true: 'true', false: 'false' } },\r\n} as const;\r\n\r\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\r\n\r\n/**\r\n * Defines the `Navbar` component media breakpoints.\r\n */\r\nexport const NAV_MEDIAS = {\r\n  medium: '(max-width: 991px)',\r\n  small: '(max-width: 767px)',\r\n  tiny: '(max-width: 479px)',\r\n} as const;\r\n", "function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      };\n\n      // Update the dom inside an animation frame \n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10);\n\n    // Restore styles\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left;\n\n    // Restore scroll\n    window.scrollTo(x, y);\n\n    previousBodyPosition = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};\n\n", "import { isScrollable } from '@finsweet/ts-utils';\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\n\nconst { body } = document;\n\nlet reserveScrollBarGap = true;\nlet scrollingDisabled = false;\n\n// TODO: This is a temporary fix, should be removed after `body-scroll-lock` releases an official update.\nlet storedScrollY: number | undefined;\n\n/**\n * @returns The current scrolling state\n */\nexport const isScrollingDisabled = (): boolean => scrollingDisabled;\n\n/**\n * Updates the `reserveScrollBarGap` param, which is `true` by default.\n * @param value The new value.\n */\nexport const setReserveScrollBarGap = (value: boolean): void => {\n  reserveScrollBarGap = value;\n};\n\n/**\n * Disables the scrolling.\n * @param target The target that will preserve scrolling.\n */\nexport const disableScrolling = (target: Element): void => {\n  storedScrollY = window.scrollY;\n  scrollingDisabled = true;\n\n  disableBodyScroll(target, { reserveScrollBarGap });\n\n  body.style.setProperty('top', `${storedScrollY * -1}px`);\n};\n\n/**\n * Enables scrolling.\n */\nexport const enableScrolling = (): void => {\n  scrollingDisabled = false;\n\n  clearAllBodyScrollLocks();\n\n  body.style.setProperty('top', '');\n  if (storedScrollY) body.scrollTo(0, storedScrollY);\n};\n\n/**\n * Finds the first scrollable child of an element.\n * @param element\n * @returns The child if found.\n */\nexport const findFirstScrollableElement = (element: HTMLElement): HTMLElement | undefined => {\n  if (isScrollable(element)) return element;\n\n  const children = element.querySelectorAll('*');\n  for (const child of children) {\n    if (!(child instanceof HTMLElement)) continue;\n    if (isScrollable(child)) return child;\n  }\n};\n", "import { ATTRIBUTES, getSelector } from './constants';\nimport { disableScrolling, enableScrolling, findFirstScrollableElement, isScrollingDisabled } from './scroll';\n\n/**\n * Inits listening for click triggers.\n * @param preserveScrollTargets The targets where scrolling must be preserved.\n */\nexport const initClickTriggers = (preserveScrollTargets: NodeListOf<Element>): void => {\n  window.addEventListener('click', ({ target }) => {\n    if (!(target instanceof Element)) return;\n\n    // Get the trigger\n    const toggleTrigger = target.closest(getSelector('element', 'toggle'));\n\n    const disableTrigger = toggleTrigger || target.closest(getSelector('element', 'disable'));\n    const enableTrigger = toggleTrigger || target.closest(getSelector('element', 'enable'));\n\n    const trigger = disableTrigger || enableTrigger;\n    if (!trigger) return;\n\n    // Make sure the media query is valid\n    const mediaToMatch = trigger.getAttribute(ATTRIBUTES.matchMedia.key);\n    if (mediaToMatch && !window.matchMedia(mediaToMatch).matches) return;\n\n    // Handle action\n    if (isScrollingDisabled() && enableTrigger) enableScrolling();\n    else if (!isScrollingDisabled() && disableTrigger instanceof HTMLElement) {\n      for (const target of new Set([\n        ...preserveScrollTargets,\n        findFirstScrollableElement(disableTrigger) || disableTrigger,\n      ])) {\n        disableScrolling(target);\n      }\n    }\n  });\n};\n", "import { isVisible, NAVBAR_CSS_CLASSES } from '@finsweet/ts-utils';\nimport debounce from 'just-debounce';\n\nimport { ATTRIBUTES, getSelector, NAV_MEDIAS } from './constants';\nimport { disableScrolling, enableScrolling, findFirstScrollableElement } from './scroll';\n\n// Contants destructuring\nconst { navMenu: navMenuCSSClass } = NAVBAR_CSS_CLASSES;\n\n// Store\nconst displayTriggersStore: Map<\n  HTMLElement,\n  { visible: boolean; firstScrollableElement: HTMLElement; matchMedia?: string | null }\n> = new Map();\n\n/**\n * Handle the state change\n * @param trigger\n */\nconst handleStateChange = (trigger: HTMLElement, preserveScrollTargets: NodeListOf<Element>) => {\n  // Get the trigger data\n  const triggerData = displayTriggersStore.get(trigger);\n  if (!triggerData) return;\n\n  // Extract values\n  const { matchMedia, firstScrollableElement, visible: wasVisibleBefore } = triggerData;\n\n  // Make sure the matchMedia requirement is valid\n  if (matchMedia && !window.matchMedia(matchMedia).matches) return;\n\n  // Check visibility\n  const visible = isVisible(trigger);\n  if (visible === wasVisibleBefore) return;\n\n  // Perform actions\n  if (wasVisibleBefore) enableScrolling();\n  else if (visible) {\n    for (const target of new Set([...preserveScrollTargets, firstScrollableElement])) disableScrolling(target);\n  }\n\n  // Store new state\n  triggerData.visible = visible;\n};\n\n/**\n * Handle the display triggers\n */\nexport const initDisplayTriggers = (preserveScrollTargets: NodeListOf<Element>): void => {\n  // DOM Elements\n  const smartNavSelector = getSelector('element', 'nav');\n\n  const displayTriggers = document.querySelectorAll<HTMLElement>(\n    `${getSelector(\n      'element',\n      'whenVisible'\n    )}, ${smartNavSelector}.${navMenuCSSClass}, ${smartNavSelector} .${navMenuCSSClass}`\n  );\n\n  // Define MutationObserver's callback\n  const callback: MutationCallback = (mutations) => {\n    const trigger = mutations[0].target as HTMLElement;\n    handleStateChange(trigger, preserveScrollTargets);\n  };\n\n  const debouncedCallback = debounce(callback, 25);\n\n  // Create MutationObserver\n  const observer = new MutationObserver(debouncedCallback);\n\n  // Init\n  for (const trigger of displayTriggers) {\n    // Get the trigger's matchMedia requisite\n    let matchMedia = trigger.getAttribute(ATTRIBUTES.matchMedia.key);\n\n    // Navbar special\n    const navbar = trigger.closest<HTMLDivElement>('.w-nav');\n    if (navbar) {\n      const collapsesAt = navbar.dataset.collapse as keyof typeof NAV_MEDIAS | undefined;\n      if (collapsesAt) matchMedia = NAV_MEDIAS[collapsesAt];\n    }\n\n    // Get the first scrollable element\n    const firstScrollableElement = findFirstScrollableElement(trigger) || trigger;\n\n    // Store the trigger's data\n    displayTriggersStore.set(trigger, {\n      visible: isVisible(trigger),\n      firstScrollableElement,\n      matchMedia,\n    });\n\n    // Trigger a state change check\n    handleStateChange(trigger, preserveScrollTargets);\n\n    // Observe the element\n    observer.observe(trigger, {\n      attributes: true,\n      attributeFilter: ['style', 'class'],\n    });\n  }\n\n  // Handle window resize events\n  const debouncedStateChangeHandler = debounce(() => {\n    for (const trigger of displayTriggers) handleStateChange(trigger, preserveScrollTargets);\n  }, 250);\n\n  window.addEventListener('resize', debouncedStateChangeHandler);\n};\n", "import { initClickTriggers } from './click';\nimport { ATTRIBUTE, ATTRIBUTES, getSelector } from './constants';\nimport { initDisplayTriggers } from './display';\nimport { setReserveScrollBarGap } from './scroll';\n\n// Constants destructuring\nconst {\n  gap: { key: gapKey, values: gapValues },\n} = ATTRIBUTES;\n\n/**\n * Inits the scrolldisable functionalities.\n */\nexport const init = (): void => {\n  const preserveScrollTargets = document.querySelectorAll(getSelector('element', 'preserve'));\n\n  let reserveScrollbarGap = true;\n\n  const reserveGapElement = document.querySelector(getSelector('gap'));\n  const disableReserveGap = reserveGapElement?.getAttribute(gapKey) === gapValues.false;\n  if (disableReserveGap) reserveScrollbarGap = false;\n\n  setReserveScrollBarGap(reserveScrollbarGap);\n\n  initClickTriggers(preserveScrollTargets);\n  initDisplayTriggers(preserveScrollTargets);\n\n  window.fsAttributes[ATTRIBUTE].resolve?.(undefined);\n};\n", "import { assessScript } from '$global/factory/assess';\r\nimport { initAttributes } from '$global/factory/init';\r\n\r\nimport { version } from '../package.json';\r\nimport { ATTRIBUTE } from './constants';\r\nimport { init } from './init';\r\n\r\n/**\r\n * Init\r\n */\r\ninitAttributes();\r\n\r\nwindow.fsAttributes[ATTRIBUTE] ||= {};\r\n\r\nconst { preventsLoad } = assessScript();\r\nconst attribute = window.fsAttributes[ATTRIBUTE];\r\n\r\nattribute.version = version;\r\n\r\nif (preventsLoad) attribute.init = init;\r\nelse {\r\n  window.Webflow ||= [];\r\n  window.Webflow.push(init);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
