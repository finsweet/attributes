{
  "version": 3,
  "sources": ["../../../node_modules/@finsweet/ts-utils/dist/components/Debug.js", "../../../node_modules/@finsweet/ts-utils/dist/webflow/css.js", "../../../node_modules/@finsweet/ts-utils/dist/webflow/getSiteId.js", "../../../node_modules/@finsweet/ts-utils/dist/webflow/restartWebflow.js", "../../../global/factory/selectors.ts", "../../../global/constants/attributes.ts", "../../../global/factory/assess.ts", "../../../global/import/support.ts", "../../../global/factory/init.ts", "../../../global/import/cmscore.ts", "src/utils/constants.ts", "src/actions/collect.ts", "../../../global/constants/a11ty.ts", "src/actions/populate.ts", "src/init.ts", "src/index.ts"],
  "sourcesContent": ["const alertTypes = ['info', 'error'];\r\nexport class Debug {\r\n    static alertsActivated = false;\r\n    static activateAlerts() {\r\n        this.alertsActivated = true;\r\n    }\r\n    static alert(text, type) {\r\n        if (this.alertsActivated)\r\n            window.alert(text);\r\n        if (type === 'error')\r\n            throw new Error(text);\r\n    }\r\n}\r\n", "export const CURRENT_CSS_CLASS = 'w--current';\r\nexport const RICH_TEXT_BLOCK_CSS_CLASS = 'w-richtext';\r\nexport const HTML_EMBED_CSS_CLASS = 'w-embed';\r\nexport const SLIDER_CSS_CLASSES = {\r\n    slider: 'w-slider',\r\n    slide: 'w-slide',\r\n    sliderMask: 'w-slider-mask',\r\n    sliderNav: 'w-slider-nav',\r\n    sliderDot: 'w-slider-dot',\r\n    activeSliderDot: 'w-active',\r\n};\r\nexport const TABS_CSS_CLASSES = {\r\n    tabs: 'w-tabs',\r\n    tabsContent: 'w-tab-content',\r\n    tabPane: 'w-tab-pane',\r\n    tabsMenu: 'w-tab-menu',\r\n    tabLink: 'w-tab-link',\r\n    activeTab: 'w--tab-active',\r\n};\r\nexport const NAVBAR_CSS_CLASSES = {\r\n    navMenu: 'w-nav-menu',\r\n};\r\nexport const CMS_CSS_CLASSES = {\r\n    wrapper: 'w-dyn-list',\r\n    list: 'w-dyn-items',\r\n    item: 'w-dyn-item',\r\n    paginationWrapper: 'w-pagination-wrapper',\r\n    paginationNext: 'w-pagination-next',\r\n    paginationPrevious: 'w-pagination-previous',\r\n    pageCount: 'w-page-count',\r\n    emptyState: 'w-dyn-empty',\r\n};\r\nexport const FORM_CSS_CLASSES = {\r\n    formBlock: 'w-form',\r\n    checkboxField: 'w-checkbox',\r\n    checkboxInput: 'w-checkbox-input',\r\n    radioField: 'w-radio',\r\n    radioInput: 'w-radio-input',\r\n    checkboxOrRadioLabel: 'w-form-label',\r\n    checkboxOrRadioFocus: 'w--redirected-focus',\r\n    checkboxOrRadioChecked: 'w--redirected-checked',\r\n    successMessage: 'w-form-done',\r\n    errorMessage: 'w-form-fail',\r\n};\r\nexport const DROPDOWN_CSS_CLASSES = {\r\n    dropdown: 'w-dropdown',\r\n    dropdownToggle: 'w-dropdown-toggle',\r\n    dropdownList: 'w-dropdown-list',\r\n};\r\nexport const COMMERCE_CSS_CLASSES = {\r\n    addToCartForm: 'w-commerce-commerceaddtocartform',\r\n};\r\nexport const LIGHTBOX_CSS_CLASSES = {\r\n    trigger: 'w-lightbox',\r\n};\r\n", "export const getSiteId = () => document.documentElement.getAttribute('data-wf-site');\r\n", "import { getSiteId } from '.';\r\nexport const restartWebflow = async (modules) => {\r\n    const { Webflow } = window;\r\n    if (!Webflow || !('destroy' in Webflow) || !('ready' in Webflow) || !('require' in Webflow))\r\n        return;\r\n    if (modules && !modules.length)\r\n        return;\r\n    if (!modules) {\r\n        Webflow.destroy();\r\n        Webflow.ready();\r\n    }\r\n    if (!modules || modules.includes('ix2')) {\r\n        const ix2 = Webflow.require('ix2');\r\n        if (ix2) {\r\n            const { store, actions } = ix2;\r\n            const { eventState } = store.getState().ixSession;\r\n            const stateEntries = Object.entries(eventState);\r\n            if (!modules)\r\n                ix2.destroy();\r\n            ix2.init();\r\n            await Promise.all(stateEntries.map((state) => store.dispatch(actions.eventStateChanged(...state))));\r\n        }\r\n    }\r\n    if (!modules || modules.includes('commerce')) {\r\n        const commerce = Webflow.require('commerce');\r\n        const siteId = getSiteId();\r\n        if (commerce && siteId) {\r\n            commerce.destroy();\r\n            commerce.init({ siteId, apiUrl: 'https://render.webflow.com' });\r\n        }\r\n    }\r\n    if (modules?.includes('lightbox'))\r\n        Webflow.require('lightbox')?.ready();\r\n    if (modules?.includes('slider'))\r\n        Webflow.require('slider')?.redraw();\r\n    if (modules?.includes('tabs'))\r\n        Webflow.require('tabs')?.redraw();\r\n    return new Promise((resolve) => Webflow.push(() => resolve(undefined)));\r\n};\r\n", "import type { AttributeOperator, AttributeStaticValue, AttributeValue } from '$global/types/selectors';\n\n/**\n * Creates a dynamic attribute value.\n * @param value The static attribute value.\n * @returns A callback for generating new attribute values by index.\n */\nexport const generateDynamicAttibuteValue = (value: string) => {\n  return (index?: number): string => `${value}${index ? `-${index}` : ''}`;\n};\n\n/**\n * @returns A `getSelector` callback for the passed `attributes` object.\n * @param attributes An object containing all attribute keys and values.\n */\nexport const generateSelectors = <\n  Attributes extends {\n    [name: string]: {\n      key: string;\n      values?: {\n        [valueKey: string]: AttributeValue;\n      };\n    };\n  }\n>(\n  attributes: Attributes\n) => {\n  /**\n   * Generates a query selector based on the preferences.\n   * @param name The name of the attribute.\n   * @param valueKey The value of the attribute.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @returns The query selector based on the preferences.\n   */\n  const getSelector = <Name extends keyof Attributes, ValueKey extends keyof Attributes[Name]['values']>(\n    name: Name,\n    valueKey?: ValueKey,\n    params?: Attributes[Name]['values'][ValueKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        }\n  ): string => {\n    const attribute = attributes[name];\n\n    const { key: attributeKey, values } = attribute;\n    let attributeValue: string;\n\n    if (!valueKey) return `[${attributeKey}]`;\n\n    const value = values?.[valueKey] as AttributeValue;\n\n    if (typeof value === 'string') attributeValue = value;\n    else attributeValue = value(params && 'instanceIndex' in params ? params.instanceIndex : undefined);\n\n    if (!params?.operator) return `[${attributeKey}=\"${attributeValue}\"]`;\n\n    switch (params.operator) {\n      case 'prefixed':\n        return `[${attributeKey}^=\"${attributeValue}\"]`;\n      case 'suffixed':\n        return `[${attributeKey}$=\"${attributeValue}\"]`;\n      case 'contains':\n        return `[${attributeKey}*=\"${attributeValue}\"]`;\n    }\n  };\n\n  /**\n   * Queries an element using the generated element selectors.\n   * @param elementKey The element key.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @param params.scope The scope for the query. Defaults to `document`.\n   */\n  const queryElement = <\n    E extends Element = Element,\n    ElementKey extends keyof Attributes['element']['values'] = keyof Attributes['element']['values']\n  >(\n    elementKey: ElementKey,\n    params?: { scope?: ParentNode } & (Attributes['element']['values'][ElementKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        })\n  ) => {\n    const selector = getSelector('element', elementKey, params);\n\n    return (params?.scope || document).querySelector<E>(selector);\n  };\n\n  return [getSelector, queryElement] as const;\n};\n", "import { generateSelectors } from '$global/factory/selectors';\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const ATTRIBUTES_PREFIX = 'fs-attributes';\r\n\r\nexport const ATTRIBUTES = {\r\n  /**\r\n   * Defines if an Attributes' `<script>` should prevent automatically loading the library.\r\n   */\r\n  preventLoad: { key: `${ATTRIBUTES_PREFIX}-preventload` },\r\n\r\n  /**\r\n   * Defines if an Attributes' `<script>` is set to Debug Mode.\r\n   */\r\n  debugMode: { key: `${ATTRIBUTES_PREFIX}-debug` },\r\n\r\n  /**\r\n   * Defines the source of an attribute script.\r\n   */\r\n  src: { key: 'src', values: { finsweet: '@finsweet/attributes' } },\r\n\r\n  /**\r\n   * Defines a developer script that is not imported from JsDelivr.\r\n   */\r\n  dev: { key: `${ATTRIBUTES_PREFIX}-dev` },\r\n} as const;\r\n\r\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\r\n", "import { Debug } from '@finsweet/ts-utils';\r\n\r\nimport { ATTRIBUTES } from '../constants/attributes';\r\nimport { GlobalAttributeParams } from '../types/global';\r\n\r\n/**\r\n * Checks the global params of the Attribute `<script>`.\r\n * @param script The `<script>` element.\r\n * @returns The {@link GlobalAttributeParams}.\r\n */\r\n\r\nexport const assessScript = (): GlobalAttributeParams => {\r\n  const { currentScript } = document;\r\n  const { preventLoad, debugMode } = ATTRIBUTES;\r\n\r\n  // Check if the Attribute should not be automatically loaded\r\n  const preventsLoad = typeof currentScript?.getAttribute(preventLoad.key) === 'string';\r\n\r\n  // Check if Debug Mode is activated\r\n  if (typeof currentScript?.getAttribute(debugMode.key) === 'string') Debug.activateAlerts();\r\n\r\n  return { preventsLoad };\r\n};\r\n", "import { ATTRIBUTES_PREFIX } from '$global/constants/attributes';\r\n\r\nconst ATTRIBUTES_SUPPORT_QUERY_PARAM = `${ATTRIBUTES_PREFIX}-support`;\r\nconst ATTRIBUTES_SUPPORT_SOURCE = 'https://cdn.jsdelivr.net/npm/@finsweet/attributes-support@1/support.js';\r\n\r\n/**\r\n * Imports the Attributes Support Wizard and mounts it on the page.\r\n * It stores the import as a Promise to ensure it isn't mounted more than once.\r\n *\r\n * @returns A promise that resolves to `true` if the app was successfuly loaded.\r\n */\r\nexport const importSupport = async () => {\r\n  const { fsAttributes, location } = window;\r\n  const { host, searchParams } = new URL(location.href);\r\n\r\n  if (!host.includes('webflow.io') || !searchParams.has(ATTRIBUTES_SUPPORT_QUERY_PARAM)) return false;\r\n\r\n  if (fsAttributes.supportImport) return fsAttributes.supportImport;\r\n\r\n  try {\r\n    fsAttributes.supportImport = new Promise((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n\r\n      script.src = ATTRIBUTES_SUPPORT_SOURCE;\r\n      script.onload = () => resolve(true);\r\n      script.onerror = reject;\r\n\r\n      document.head.append(script);\r\n    });\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n\r\n  return fsAttributes.supportImport;\r\n};\r\n", "import { ATTRIBUTES, getSelector } from '$global/constants/attributes';\r\nimport { importSupport } from '$global/import/support';\r\nimport type { FsAttributes, FsAttributesCallback } from '$global/types/global';\r\n\r\n/**\r\n * Makes sure the window object is defined.\r\n */\r\nexport const initAttributes = () => {\r\n  if (window.fsAttributes && !Array.isArray(window.fsAttributes)) return;\r\n\r\n  const fsAttributes = {\r\n    cms: {},\r\n    push(...args) {\r\n      for (const [attributeName, callback] of args) this[attributeName]?.loading?.then(callback);\r\n    },\r\n  } as FsAttributes;\r\n\r\n  initLoadPromises(fsAttributes);\r\n  runExistingCallbacks(fsAttributes);\r\n\r\n  window.fsAttributes = fsAttributes;\r\n  window.FsAttributes = window.fsAttributes;\r\n\r\n  importSupport();\r\n};\r\n\r\n/**\r\n * Sets a loading promise for each attribute package.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst initLoadPromises = (fsAttributes: FsAttributes) => {\r\n  const srcSelector = getSelector('src', 'finsweet', { operator: 'contains' });\r\n  const devSelector = getSelector('dev');\r\n  const scripts = [...document.querySelectorAll<HTMLScriptElement>(`script${srcSelector}, script${devSelector}`)];\r\n\r\n  const attributes = scripts.reduce<string[]>((acc, script) => {\r\n    const attributeName = script.getAttribute(ATTRIBUTES.dev.key) || script.src.match(/[\\w-. ]+(?=(\\.js)$)/)?.[0];\r\n    if (attributeName && !acc.includes(attributeName)) acc.push(attributeName);\r\n\r\n    return acc;\r\n  }, []);\r\n\r\n  for (const attributeName of attributes) {\r\n    fsAttributes[attributeName] = {};\r\n    const attribute = fsAttributes[attributeName];\r\n\r\n    attribute.loading = new Promise((resolve) => {\r\n      attribute.resolve = (value: unknown) => {\r\n        resolve(value);\r\n        delete attribute.resolve;\r\n      };\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Runs the existing callbacks in the `window.fsAttributes` object.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst runExistingCallbacks = (fsAttributes: FsAttributes) => {\r\n  const existingCallbacks = Array.isArray(window.fsAttributes) ? (window.fsAttributes as FsAttributesCallback[]) : [];\r\n  fsAttributes.push(...existingCallbacks);\r\n};\r\n", "import { Debug } from '@finsweet/ts-utils';\r\n\r\nimport type { CMSCoreImport } from '$cms/cmscore/src/types';\r\n\r\nconst CMS_CORE_SOURCE = 'https://cdn.jsdelivr.net/npm/@finsweet/attributes-cmscore@1/cmscore.js';\r\n// const CMS_CORE_SOURCE = 'http://localhost:3000/packages/cms/cmscore/cmscore.js';\r\n\r\n/**\r\n * Dynamically imports the `cms/cmscore` package.\r\n * After the first import, it stores the response in {@link window.fsAttributes.cms.coreImport}.\r\n *\r\n * Once the import has finished, it also stores the `cmscore` version so other `cms` packages can access it.\r\n *\r\n * @returns A `Promise` of the package response.\r\n */\r\nexport const importCMSCore = async (): CMSCoreImport => {\r\n  const { fsAttributes } = window;\r\n\r\n  fsAttributes.cms ||= {};\r\n  const { cms } = fsAttributes;\r\n\r\n  if (cms.coreImport) return cms.coreImport;\r\n\r\n  try {\r\n    const cmsCoreImport: CMSCoreImport = import(CMS_CORE_SOURCE);\r\n\r\n    cms.coreImport = cmsCoreImport;\r\n\r\n    cmsCoreImport.then((cmsCore) => {\r\n      if (cmsCore) cms.coreVersion ||= cmsCore.version;\r\n    });\r\n\r\n    return cmsCoreImport;\r\n  } catch (error) {\r\n    Debug.alert(`${error}`, 'error');\r\n    return;\r\n  }\r\n};\r\n", "import { generateDynamicAttibuteValue, generateSelectors } from '$global/factory/selectors';\r\n\r\nexport const ATTRIBUTE = 'cmstabs';\r\n\r\nconst ATTRIBUTES_PREFIX = `fs-${ATTRIBUTE}`;\r\n\r\nexport const LIST_ELEMENT_KEY = 'list';\r\nexport const TABS_ELEMENT_KEY = 'tabs';\r\nexport const TAB_LINK_ELEMENT_KEY = 'tab-link';\r\n\r\nexport const RESET_IX_SETTING_KEY = 'resetix';\r\nexport const RESET_IX_SETTING_VALUES = { true: 'true' } as const;\r\n\r\nexport const ATTRIBUTES = {\r\n  element: {\r\n    key: `${ATTRIBUTES_PREFIX}-element`,\r\n    values: {\r\n      /**\r\n       * Defines a list to be included into the target tabs.\r\n       */\r\n      list: generateDynamicAttibuteValue(LIST_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines the target tabs where all lists will be included into.\r\n       */\r\n      tabs: generateDynamicAttibuteValue(TABS_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines the content that will be placed inside the generated `Tab Link` in the `Tabs Menu`.\r\n       */\r\n      tabLink: TAB_LINK_ELEMENT_KEY,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines if Webflow should be restarted after populating the tabs.\r\n   */\r\n  resetIx: { key: `${ATTRIBUTES_PREFIX}-${RESET_IX_SETTING_KEY}`, values: RESET_IX_SETTING_VALUES },\r\n} as const;\r\n\r\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\r\n", "import { TABS_CSS_CLASSES } from '@finsweet/ts-utils';\r\nimport type { TabsElement } from '@finsweet/ts-utils';\r\n\r\nimport type { CMSList } from '$cms/cmscore/src';\r\n\r\nimport { ATTRIBUTES, getSelector } from '../utils/constants';\r\nimport type { PopulateData } from '../utils/types';\r\n\r\nconst {\r\n  element: { key: elementKey },\r\n  resetIx: { key: resetIxKey, values: resetIxValues },\r\n} = ATTRIBUTES;\r\n\r\n/**\r\n * Collects the source lists and the Tabs target to populate.\r\n * @param listInstances An array of {@link CMSList} instances.\r\n * @returns A {@link PopulateData} array.\r\n */\r\nexport const collectPopulateData = (listInstances: CMSList[]): [PopulateData[], boolean] => {\r\n  let populateData: PopulateData[] = [];\r\n  let restartIx = false;\r\n\r\n  for (const listInstance of listInstances) {\r\n    const instanceIndex = listInstance.getInstanceIndex(elementKey);\r\n\r\n    // Get the slider target\r\n    const tabsElement = document.querySelector<TabsElement>(\r\n      `.${TABS_CSS_CLASSES.tabs}${getSelector('element', 'tabs', { instanceIndex })}`\r\n    );\r\n\r\n    if (!tabsElement) continue;\r\n\r\n    // Make sure the populate data exists\r\n    const data = (populateData[instanceIndex || 0] ||= { listInstances: [], tabsElement });\r\n\r\n    // Collect the list\r\n    data.listInstances.push(listInstance);\r\n\r\n    // Check if IX2 must be restarted\r\n    restartIx ||= tabsElement.getAttribute(resetIxKey) === resetIxValues.true;\r\n    restartIx ||= listInstance.getAttribute(resetIxKey) === resetIxValues.true;\r\n  }\r\n\r\n  // Filter out invalid instances\r\n  populateData = populateData.filter((data) => data && data.listInstances.length);\r\n\r\n  return [populateData, restartIx];\r\n};\r\n", "export const ARIA_ROLE_KEY = 'role';\r\nexport const ARIA_ROLE_VALUES = {\r\n  slider: 'slider',\r\n  listbox: 'listbox',\r\n  option: 'option',\r\n  columnheader: 'columnheader',\r\n  link: 'link',\r\n} as const;\r\nexport const TABINDEX_KEY = 'tabindex';\r\nexport const ARIA_LABEL_KEY = 'aria-label';\r\nexport const ARIA_LABELLEDBY_KEY = 'aria-labelledby';\r\nexport const ARIA_VALUENOW_KEY = 'aria-valuenow';\r\nexport const ARIA_VALUEMIN_KEY = 'aria-valuemin';\r\nexport const ARIA_VALUEMAX_KEY = 'aria-valuemax';\r\nexport const ARIA_SELECTED_KEY = 'aria-selected';\r\nexport const ARIA_HASPOPUP_KEY = 'aria-haspopup';\r\nexport const ARIA_MULTISELECTABLE_KEY = 'aria-multiselectable';\r\nexport const ARIA_EXPANDED_KEY = 'aria-expanded';\r\nexport const ARIA_CURRENT_KEY = 'aria-current';\r\nexport const ARIA_ACTIVEDESCENDANT_KEY = 'aria-activedescendant';\r\nexport const ARIA_PRESSED_KEY = 'aria-pressed';\r\nexport const ARIA_SORT_KEY = 'aria-sort';\r\nexport const ARIA_SORT_VALUES = {\r\n  ascending: 'ascending',\r\n  descending: 'descending',\r\n} as const;\r\n", "import { TABS_CSS_CLASSES, CURRENT_CSS_CLASS } from '@finsweet/ts-utils';\r\nimport type { TabsMenuElement, TabsContentElement, TabLinkElement, TabPaneElement } from '@finsweet/ts-utils';\r\n\r\nimport type { CMSItem } from '$cms/cmscore/src';\r\nimport { ARIA_ROLE_KEY } from '$global/constants/a11ty';\r\n\r\nimport { getSelector, queryElement } from '../utils/constants';\r\nimport type { PopulateData } from '../utils/types';\r\n\r\n// Constants destructuring\r\nconst {\r\n  tabsContent: tabsContentCSSClass,\r\n  tabPane: tabPaneCSSClass,\r\n  tabsMenu: tabsMenuCSSClass,\r\n  tabLink: tabLinkCSSClass,\r\n  activeTab: activeTabCSSClass,\r\n} = TABS_CSS_CLASSES;\r\n\r\n/**\r\n * Creates a new `Tab Link` and `Tab Pane` for each `Collection Item`.\r\n * @param populateData\r\n * @returns A `createTabsFromItems` callback.\r\n */\r\nexport const populateTabsFromLists = ({ listInstances, tabsElement }: PopulateData) => {\r\n  const tabsMenu = tabsElement.querySelector<TabsMenuElement>(`.${tabsMenuCSSClass}`);\r\n  const tabsContent = tabsElement.querySelector<TabsContentElement>(`.${tabsContentCSSClass}`);\r\n  const existingTabLinks = tabsElement.querySelectorAll<TabLinkElement>(`.${tabLinkCSSClass}`);\r\n  const existingTabPanes = tabsElement.querySelectorAll<TabPaneElement>(`.${tabPaneCSSClass}`);\r\n\r\n  if (!tabsMenu || !tabsContent || !existingTabLinks.length || !existingTabPanes.length) return;\r\n\r\n  // Store the template CSS classes\r\n  const tabLinkCSS = existingTabLinks[0].classList.value;\r\n  const tabPaneCSS = existingTabPanes[0].classList.value;\r\n\r\n  // Remove existing items\r\n  for (const element of [...existingTabLinks, ...existingTabPanes]) element.remove();\r\n\r\n  let itemIndex = 0;\r\n\r\n  /**\r\n   * Adds a new `Tab Link` and `Tab Pane` for each `Collection Item`.\r\n   * @param items The `CMSItem` instances.\r\n   */\r\n  const createTabsFromItems = (items: CMSItem[]) => {\r\n    for (const { element } of items) {\r\n      element.removeAttribute(ARIA_ROLE_KEY);\r\n\r\n      const newTabLink = document.createElement('div');\r\n      newTabLink.setAttribute('class', tabLinkCSS);\r\n\r\n      const newTabPane = document.createElement('div');\r\n      newTabPane.setAttribute('class', tabPaneCSS);\r\n\r\n      for (const element of [newTabLink, newTabPane]) element.dataset.wTab = `Tab ${itemIndex}`;\r\n\r\n      if (itemIndex === 0) {\r\n        newTabLink.classList.add(CURRENT_CSS_CLASS);\r\n        newTabPane.classList.add(activeTabCSSClass);\r\n      }\r\n\r\n      // Populate the `Tab Link` and `Tab Pane`\r\n      let newTabLinkContent = queryElement('tabLink', { operator: 'prefixed', scope: element });\r\n\r\n      if (!newTabLinkContent) {\r\n        newTabLinkContent = document.createElement('div');\r\n        newTabLinkContent.innerHTML = /* html */ `Use <strong>${getSelector(\r\n          'element',\r\n          'tabLink'\r\n        )}</strong> to define this Tab Link content.`;\r\n      }\r\n\r\n      newTabLink.appendChild(newTabLinkContent);\r\n      newTabPane.appendChild(element);\r\n\r\n      // Populate the `Tabs` component\r\n      tabsMenu.appendChild(newTabLink);\r\n      tabsContent.appendChild(newTabPane);\r\n\r\n      // Increment item index\r\n      itemIndex += 1;\r\n    }\r\n  };\r\n\r\n  for (const { wrapper, items } of listInstances) {\r\n    // Create tabs\r\n    createTabsFromItems(items);\r\n\r\n    // Hide the Collection List Wrapper\r\n    wrapper.style.display = 'none';\r\n  }\r\n\r\n  return createTabsFromItems;\r\n};\r\n", "import { restartWebflow } from '@finsweet/ts-utils';\r\n\r\nimport type { CMSList } from '$cms/cmscore/src';\r\nimport { importCMSCore } from '$global/import/cmscore';\r\n\r\nimport { collectPopulateData } from './actions/collect';\r\nimport { populateTabsFromLists } from './actions/populate';\r\nimport { ATTRIBUTE, getSelector } from './utils/constants';\r\n\r\n/**\r\n * Inits the attribute.\r\n */\r\nexport const init = async (): Promise<CMSList[]> => {\r\n  const cmsCore = await importCMSCore();\r\n  if (!cmsCore) return [];\r\n\r\n  const listInstances = cmsCore.createCMSListInstances([getSelector('element', 'list', { operator: 'prefixed' })]);\r\n\r\n  // Collect the combine data\r\n  const [populateData, restartIx] = collectPopulateData(listInstances);\r\n\r\n  // Populate the sliders\r\n  for (const data of populateData) {\r\n    const { listInstances } = data;\r\n\r\n    const createTabsFromItems = populateTabsFromLists(data);\r\n\r\n    // Listen events\r\n    for (const listInstance of listInstances) {\r\n      listInstance.restartTabs = true;\r\n      listInstance.restartIx ||= restartIx;\r\n      listInstance.items = [];\r\n\r\n      listInstance.on('renderitems', async (renderedItems) => {\r\n        listInstance.items = [];\r\n\r\n        createTabsFromItems?.(renderedItems);\r\n      });\r\n    }\r\n  }\r\n\r\n  const modulesToRestart: Parameters<typeof restartWebflow>['0'] = ['tabs'];\r\n  if (restartIx) modulesToRestart.push('ix2');\r\n\r\n  await restartWebflow(modulesToRestart);\r\n\r\n  window.fsAttributes[ATTRIBUTE].resolve?.(listInstances);\r\n\r\n  return listInstances;\r\n};\r\n", "import { assessScript } from '$global/factory/assess';\r\nimport { initAttributes } from '$global/factory/init';\r\nimport { importCMSCore } from '$global/import/cmscore';\r\n\r\nimport { version } from '../package.json';\r\nimport { init } from './init';\r\nimport { ATTRIBUTE } from './utils/constants';\r\n\r\n/**\r\n * Init\r\n */\r\ninitAttributes();\r\nimportCMSCore();\r\n\r\nwindow.fsAttributes[ATTRIBUTE] ||= {};\r\n\r\nconst { preventsLoad } = assessScript();\r\nconst attribute = window.fsAttributes[ATTRIBUTE];\r\n\r\nattribute.version = version;\r\n\r\nif (preventsLoad) attribute.init = init;\r\nelse {\r\n  window.Webflow ||= [];\r\n  window.Webflow.push(init);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
