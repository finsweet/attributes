{
  "version": 3,
  "sources": ["../../../node_modules/@finsweet/ts-utils/dist/components/Debug.js", "../../../node_modules/@finsweet/ts-utils/dist/webflow/css.js", "../../../node_modules/@finsweet/ts-utils/dist/helpers/extractNumberSuffix.js", "../../../global/factory/selectors.ts", "../../../global/constants/attributes.ts", "../../../global/factory/assess.ts", "../../../global/import/support.ts", "../../../global/factory/init.ts", "src/constants.ts", "../cmsload/src/utils/constants.ts", "../../../global/import/cmscore.ts", "../../../global/helpers/instances.ts", "src/populate.ts", "src/init.ts", "src/index.ts"],
  "sourcesContent": ["const alertTypes = ['info', 'error'];\r\nexport class Debug {\r\n    static alertsActivated = false;\r\n    static activateAlerts() {\r\n        this.alertsActivated = true;\r\n    }\r\n    static alert(text, type) {\r\n        if (this.alertsActivated)\r\n            window.alert(text);\r\n        if (type === 'error')\r\n            throw new Error(text);\r\n    }\r\n}\r\n", "export const CURRENT_CSS_CLASS = 'w--current';\r\nexport const RICH_TEXT_BLOCK_CSS_CLASS = 'w-richtext';\r\nexport const HTML_EMBED_CSS_CLASS = 'w-embed';\r\nexport const SLIDER_CSS_CLASSES = {\r\n    slider: 'w-slider',\r\n    slide: 'w-slide',\r\n    sliderMask: 'w-slider-mask',\r\n    sliderNav: 'w-slider-nav',\r\n    sliderDot: 'w-slider-dot',\r\n    activeSliderDot: 'w-active',\r\n};\r\nexport const TABS_CSS_CLASSES = {\r\n    tabs: 'w-tabs',\r\n    tabsContent: 'w-tab-content',\r\n    tabPane: 'w-tab-pane',\r\n    tabsMenu: 'w-tab-menu',\r\n    tabLink: 'w-tab-link',\r\n    activeTab: 'w--tab-active',\r\n};\r\nexport const NAVBAR_CSS_CLASSES = {\r\n    navMenu: 'w-nav-menu',\r\n};\r\nexport const CMS_CSS_CLASSES = {\r\n    wrapper: 'w-dyn-list',\r\n    list: 'w-dyn-items',\r\n    item: 'w-dyn-item',\r\n    paginationWrapper: 'w-pagination-wrapper',\r\n    paginationNext: 'w-pagination-next',\r\n    paginationPrevious: 'w-pagination-previous',\r\n    pageCount: 'w-page-count',\r\n    emptyState: 'w-dyn-empty',\r\n};\r\nexport const FORM_CSS_CLASSES = {\r\n    formBlock: 'w-form',\r\n    checkboxField: 'w-checkbox',\r\n    checkboxInput: 'w-checkbox-input',\r\n    radioField: 'w-radio',\r\n    radioInput: 'w-radio-input',\r\n    checkboxOrRadioLabel: 'w-form-label',\r\n    checkboxOrRadioFocus: 'w--redirected-focus',\r\n    checkboxOrRadioChecked: 'w--redirected-checked',\r\n    successMessage: 'w-form-done',\r\n    errorMessage: 'w-form-fail',\r\n};\r\nexport const DROPDOWN_CSS_CLASSES = {\r\n    dropdown: 'w-dropdown',\r\n    dropdownToggle: 'w-dropdown-toggle',\r\n    dropdownList: 'w-dropdown-list',\r\n};\r\nexport const COMMERCE_CSS_CLASSES = {\r\n    addToCartForm: 'w-commerce-commerceaddtocartform',\r\n};\r\nexport const LIGHTBOX_CSS_CLASSES = {\r\n    trigger: 'w-lightbox',\r\n};\r\n", "export const extractNumberSuffix = (string) => {\r\n    const splitValue = string.split('-');\r\n    const suffix = parseInt(splitValue[splitValue.length - 1]);\r\n    if (!isNaN(suffix))\r\n        return suffix;\r\n};\r\n", "import type { AttributeOperator, AttributeStaticValue, AttributeValue } from '$global/types/selectors';\n\n/**\n * Creates a dynamic attribute value.\n * @param value The static attribute value.\n * @returns A callback for generating new attribute values by index.\n */\nexport const generateDynamicAttibuteValue = (value: string) => {\n  return (index?: number): string => `${value}${index ? `-${index}` : ''}`;\n};\n\n/**\n * @returns A `getSelector` callback for the passed `attributes` object.\n * @param attributes An object containing all attribute keys and values.\n */\nexport const generateSelectors = <\n  Attributes extends {\n    [name: string]: {\n      key: string;\n      values?: {\n        [valueKey: string]: AttributeValue;\n      };\n    };\n  }\n>(\n  attributes: Attributes\n) => {\n  /**\n   * Generates a query selector based on the preferences.\n   * @param name The name of the attribute.\n   * @param valueKey The value of the attribute.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @returns The query selector based on the preferences.\n   */\n  const getSelector = <Name extends keyof Attributes, ValueKey extends keyof Attributes[Name]['values']>(\n    name: Name,\n    valueKey?: ValueKey,\n    params?: Attributes[Name]['values'][ValueKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        }\n  ): string => {\n    const attribute = attributes[name];\n\n    const { key: attributeKey, values } = attribute;\n    let attributeValue: string;\n\n    if (!valueKey) return `[${attributeKey}]`;\n\n    const value = values?.[valueKey] as AttributeValue;\n\n    if (typeof value === 'string') attributeValue = value;\n    else attributeValue = value(params && 'instanceIndex' in params ? params.instanceIndex : undefined);\n\n    if (!params?.operator) return `[${attributeKey}=\"${attributeValue}\"]`;\n\n    switch (params.operator) {\n      case 'prefixed':\n        return `[${attributeKey}^=\"${attributeValue}\"]`;\n      case 'suffixed':\n        return `[${attributeKey}$=\"${attributeValue}\"]`;\n      case 'contains':\n        return `[${attributeKey}*=\"${attributeValue}\"]`;\n    }\n  };\n\n  /**\n   * Queries an element using the generated element selectors.\n   * @param elementKey The element key.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @param params.scope The scope for the query. Defaults to `document`.\n   */\n  const queryElement = <\n    E extends Element = Element,\n    ElementKey extends keyof Attributes['element']['values'] = keyof Attributes['element']['values']\n  >(\n    elementKey: ElementKey,\n    params?: { scope?: ParentNode } & (Attributes['element']['values'][ElementKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        })\n  ) => {\n    const selector = getSelector('element', elementKey, params);\n\n    return (params?.scope || document).querySelector<E>(selector);\n  };\n\n  return [getSelector, queryElement] as const;\n};\n", "import { generateSelectors } from '$global/factory/selectors';\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const ATTRIBUTES_PREFIX = 'fs-attributes';\r\n\r\nexport const ATTRIBUTES = {\r\n  /**\r\n   * Defines if an Attributes' `<script>` should prevent automatically loading the library.\r\n   */\r\n  preventLoad: { key: `${ATTRIBUTES_PREFIX}-preventload` },\r\n\r\n  /**\r\n   * Defines if an Attributes' `<script>` is set to Debug Mode.\r\n   */\r\n  debugMode: { key: `${ATTRIBUTES_PREFIX}-debug` },\r\n\r\n  /**\r\n   * Defines the source of an attribute script.\r\n   */\r\n  src: { key: 'src', values: { finsweet: '@finsweet/attributes' } },\r\n\r\n  /**\r\n   * Defines a developer script that is not imported from JsDelivr.\r\n   */\r\n  dev: { key: `${ATTRIBUTES_PREFIX}-dev` },\r\n} as const;\r\n\r\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\r\n", "import { Debug } from '@finsweet/ts-utils';\r\n\r\nimport { ATTRIBUTES } from '../constants/attributes';\r\nimport { GlobalAttributeParams } from '../types/global';\r\n\r\n/**\r\n * Checks the global params of the Attribute `<script>`.\r\n * @param script The `<script>` element.\r\n * @returns The {@link GlobalAttributeParams}.\r\n */\r\n\r\nexport const assessScript = (): GlobalAttributeParams => {\r\n  const { currentScript } = document;\r\n  const { preventLoad, debugMode } = ATTRIBUTES;\r\n\r\n  // Check if the Attribute should not be automatically loaded\r\n  const preventsLoad = typeof currentScript?.getAttribute(preventLoad.key) === 'string';\r\n\r\n  // Check if Debug Mode is activated\r\n  if (typeof currentScript?.getAttribute(debugMode.key) === 'string') Debug.activateAlerts();\r\n\r\n  return { preventsLoad };\r\n};\r\n", "import { ATTRIBUTES_PREFIX } from '$global/constants/attributes';\r\n\r\nconst ATTRIBUTES_SUPPORT_QUERY_PARAM = `${ATTRIBUTES_PREFIX}-support`;\r\nconst ATTRIBUTES_SUPPORT_SOURCE = 'https://cdn.jsdelivr.net/npm/@finsweet/attributes-support@1/support.js';\r\n\r\n/**\r\n * Imports the Attributes Support Wizard and mounts it on the page.\r\n * It stores the import as a Promise to ensure it isn't mounted more than once.\r\n *\r\n * @returns A promise that resolves to `true` if the app was successfuly loaded.\r\n */\r\nexport const importSupport = async () => {\r\n  const { fsAttributes, location } = window;\r\n  const { host, searchParams } = new URL(location.href);\r\n\r\n  if (!host.includes('webflow.io') || !searchParams.has(ATTRIBUTES_SUPPORT_QUERY_PARAM)) return false;\r\n\r\n  if (fsAttributes.supportImport) return fsAttributes.supportImport;\r\n\r\n  try {\r\n    fsAttributes.supportImport = new Promise((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n\r\n      script.src = ATTRIBUTES_SUPPORT_SOURCE;\r\n      script.onload = () => resolve(true);\r\n      script.onerror = reject;\r\n\r\n      document.head.append(script);\r\n    });\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n\r\n  return fsAttributes.supportImport;\r\n};\r\n", "import { ATTRIBUTES, getSelector } from '$global/constants/attributes';\r\nimport { importSupport } from '$global/import/support';\r\nimport type { FsAttributes, FsAttributesCallback } from '$global/types/global';\r\n\r\n/**\r\n * Makes sure the window object is defined.\r\n */\r\nexport const initAttributes = () => {\r\n  if (window.fsAttributes && !Array.isArray(window.fsAttributes)) return;\r\n\r\n  const fsAttributes = {\r\n    cms: {},\r\n    push(...args) {\r\n      for (const [attributeName, callback] of args) this[attributeName]?.loading?.then(callback);\r\n    },\r\n  } as FsAttributes;\r\n\r\n  initLoadPromises(fsAttributes);\r\n  runExistingCallbacks(fsAttributes);\r\n\r\n  window.fsAttributes = fsAttributes;\r\n  window.FsAttributes = window.fsAttributes;\r\n\r\n  importSupport();\r\n};\r\n\r\n/**\r\n * Sets a loading promise for each attribute package.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst initLoadPromises = (fsAttributes: FsAttributes) => {\r\n  const srcSelector = getSelector('src', 'finsweet', { operator: 'contains' });\r\n  const devSelector = getSelector('dev');\r\n  const scripts = [...document.querySelectorAll<HTMLScriptElement>(`script${srcSelector}, script${devSelector}`)];\r\n\r\n  const attributes = scripts.reduce<string[]>((acc, script) => {\r\n    const attributeName = script.getAttribute(ATTRIBUTES.dev.key) || script.src.match(/[\\w-. ]+(?=(\\.js)$)/)?.[0];\r\n    if (attributeName && !acc.includes(attributeName)) acc.push(attributeName);\r\n\r\n    return acc;\r\n  }, []);\r\n\r\n  for (const attributeName of attributes) {\r\n    fsAttributes[attributeName] = {};\r\n    const attribute = fsAttributes[attributeName];\r\n\r\n    attribute.loading = new Promise((resolve) => {\r\n      attribute.resolve = (value: unknown) => {\r\n        resolve(value);\r\n        delete attribute.resolve;\r\n      };\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Runs the existing callbacks in the `window.fsAttributes` object.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst runExistingCallbacks = (fsAttributes: FsAttributes) => {\r\n  const existingCallbacks = Array.isArray(window.fsAttributes) ? (window.fsAttributes as FsAttributesCallback[]) : [];\r\n  fsAttributes.push(...existingCallbacks);\r\n};\r\n", "import { generateDynamicAttibuteValue, generateSelectors } from '$global/factory/selectors';\r\n\r\nexport const ATTRIBUTE = 'cmsselect';\r\n\r\nconst ATTRIBUTES_PREFIX = `fs-${ATTRIBUTE}`;\r\n\r\nexport const TEXT_VALUE_ELEMENT_KEY = 'text-value';\r\nexport const SELECT_ELEMENT_KEY = 'select';\r\n\r\nexport const ATTRIBUTES = {\r\n  element: {\r\n    key: `${ATTRIBUTES_PREFIX}-element`,\r\n    values: {\r\n      /**\r\n       * Defines the elements as the source to populate the target.\r\n       */\r\n      textValue: generateDynamicAttibuteValue(TEXT_VALUE_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines the element as the target to be populated.\r\n       */\r\n      select: SELECT_ELEMENT_KEY,\r\n    },\r\n  },\r\n} as const;\r\n\r\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\r\n", "import type { WebflowBreakpoint } from '@finsweet/ts-utils';\r\n\r\nimport { generateDynamicAttibuteValue, generateSelectors } from '$global/factory/selectors';\r\n\r\nexport const ATTRIBUTE = 'cmsload';\r\n\r\nconst ATTRIBUTES_PREFIX = `fs-${ATTRIBUTE}`;\r\n\r\nexport const LIST_ELEMENT_KEY = 'list';\r\nexport const LOADER_ELEMENT_KEY = 'loader';\r\nexport const ITEMS_COUNT_ELEMENT_KEY = 'items-count';\r\nexport const VISIBLE_COUNT_ELEMENT_KEY = 'visible-count';\r\nexport const SCROLL_ANCHOR_ELEMENT_KEY = 'scroll-anchor';\r\nexport const PAGE_BUTTON_ELEMENT_KEY = 'page-button';\r\nexport const PAGE_DOTS_ELEMENT_KEY = 'page-dots';\r\n\r\nexport const MODE_SETTING_KEY = 'mode';\r\nexport const MODE_SETTING_VALUES = {\r\n  /**\r\n   * Renders items at the bottom of the page.\r\n   */\r\n  loadUnder: 'load-under',\r\n\r\n  /**\r\n   * All items will be rendered at once.\r\n   */\r\n  renderAll: 'render-all',\r\n\r\n  /**\r\n   * Pagination will be created.\r\n   */\r\n  pagination: 'pagination',\r\n\r\n  /**\r\n   * Items will be loaded when the user reaches the bottom of the Collection List.\r\n   * Threshold can be defined with {@link ATTRIBUTES.threshold}.\r\n   */\r\n  infinite: 'infinite',\r\n} as const;\r\nexport const THRESHOLD_SETTING_KEY = 'threshold';\r\nexport const PAGE_SIBLINGS_SETTING_KEY = 'pagesiblings';\r\nexport const PAGE_BOUNDARY_SETTING_KEY = 'pageboundary';\r\nexport const ANIMATION_SETTING_KEY = 'animation';\r\nexport const EASING_SETTING_KEY = 'easing';\r\nexport const DURATION_SETTING_KEY = 'duration';\r\nexport const STAGGER_SETTING_KEY = 'stagger';\r\nexport const RESET_IX_SETTING_KEY = 'resetix';\r\nexport const RESET_IX_SETTING_VALUES = { true: 'true' } as const;\r\nexport const SHOW_QUERY_SETTING_KEY = 'showquery';\r\nexport const SHOW_QUERY_SETTING_VALUES = { true: 'true' } as const;\r\n\r\nexport const ATTRIBUTES = {\r\n  element: {\r\n    key: `${ATTRIBUTES_PREFIX}-element`,\r\n    values: {\r\n      /**\r\n       * Defines a list to be instantiated.\r\n       */\r\n      list: generateDynamicAttibuteValue(LIST_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines a node that will be displayed when loading new items.\r\n       */\r\n      loader: generateDynamicAttibuteValue(LOADER_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines an element where to display the total items of the list.\r\n       */\r\n      itemsCount: generateDynamicAttibuteValue(ITEMS_COUNT_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines an element where to display the amount of visible items.\r\n       */\r\n      visibleCount: generateDynamicAttibuteValue(VISIBLE_COUNT_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines an element where to scroll the view every time a page in `Pagination` mode is switched.\r\n       */\r\n      scrollAnchor: generateDynamicAttibuteValue(SCROLL_ANCHOR_ELEMENT_KEY),\r\n\r\n      /**\r\n       * Defines the template element to generate all page buttons for the `paginate` mode.\r\n       */\r\n      pageButton: PAGE_BUTTON_ELEMENT_KEY,\r\n\r\n      /**\r\n       * Defines the template element to create the page dots separators.\r\n       */\r\n      pageDots: PAGE_DOTS_ELEMENT_KEY,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines the loading mode.\r\n   */\r\n  mode: {\r\n    key: `${ATTRIBUTES_PREFIX}-${MODE_SETTING_KEY}`,\r\n    values: MODE_SETTING_VALUES,\r\n  },\r\n\r\n  /**\r\n   * Defines the scrolling threshold to trigger a new page load in `infinite` mode.\r\n   * Defaults to {@link DEFAULT_INFINITE_THRESHOLD}.\r\n   */\r\n  threshold: { key: `${ATTRIBUTES_PREFIX}-${THRESHOLD_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines the amount of digits to display either side of the current page.\r\n   * It can be a comma-separated string listing the values in a `Desktop, Tablet, Landscape, Portrait` order.\r\n   *\r\n   * Defaults to {@link DEFAULT_PAGE_SIBLINGS}.\r\n   */\r\n  pageSiblings: { key: `${ATTRIBUTES_PREFIX}-${PAGE_SIBLINGS_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines the amount of digits to display at the start and end of a page buttons list.\r\n   * It can be a comma-separated string listing the values in a `Desktop, Tablet, Landscape, Portrait` order.\r\n   *\r\n   * Defaults to {@link DEFAULT_PAGE_BOUNDARY}.\r\n   */\r\n  pageBoundary: { key: `${ATTRIBUTES_PREFIX}-${PAGE_BOUNDARY_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines the animation to use when appending elements to the list.\r\n   * Allowed values are defined in {@link \"packages/animations\"}.\r\n   */\r\n  animation: { key: `${ATTRIBUTES_PREFIX}-${ANIMATION_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines the easing function of the animation.\r\n   * Allowed values are defined in {@link \"packages/animations\"}.\r\n   */\r\n  easing: { key: `${ATTRIBUTES_PREFIX}-${EASING_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines the duration of the animation.\r\n   */\r\n  duration: { key: `${ATTRIBUTES_PREFIX}-${DURATION_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines if animations should be staggered.\r\n   */\r\n  stagger: { key: `${ATTRIBUTES_PREFIX}-${STAGGER_SETTING_KEY}` },\r\n\r\n  /**\r\n   * Defines if Webflow should be restarted after loading new items.\r\n   */\r\n  resetIx: { key: `${ATTRIBUTES_PREFIX}-${RESET_IX_SETTING_KEY}`, values: RESET_IX_SETTING_VALUES },\r\n\r\n  /**\r\n   * Defines if the pagination query params should be displayed on the URL.\r\n   * Only works with {@link MODE_SETTING_VALUES.pagination} mode.\r\n   */\r\n  showQuery: { key: `${ATTRIBUTES_PREFIX}-${SHOW_QUERY_SETTING_KEY}`, values: SHOW_QUERY_SETTING_VALUES },\r\n} as const;\r\n\r\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\r\n\r\nexport const DEFAULT_INFINITE_THRESHOLD = '-20';\r\n\r\nexport const DEFAULT_PAGE_SIBLINGS = 1;\r\nexport const DEFAULT_PAGE_BOUNDARY = 1;\r\n\r\nexport const BREAKPOINTS_INDEX: { [key in WebflowBreakpoint]: number } = {\r\n  main: 0,\r\n  medium: 1,\r\n  small: 2,\r\n  tiny: 3,\r\n} as const;\r\n", "import { Debug } from '@finsweet/ts-utils';\r\n\r\nimport type { CMSCoreImport } from '$cms/cmscore/src/types';\r\n\r\nconst CMS_CORE_SOURCE = 'https://cdn.jsdelivr.net/npm/@finsweet/attributes-cmscore@1/cmscore.js';\r\n// const CMS_CORE_SOURCE = 'http://localhost:3000/packages/cms/cmscore/cmscore.js';\r\n\r\n/**\r\n * Dynamically imports the `cms/cmscore` package.\r\n * After the first import, it stores the response in {@link window.fsAttributes.cms.coreImport}.\r\n *\r\n * Once the import has finished, it also stores the `cmscore` version so other `cms` packages can access it.\r\n *\r\n * @returns A `Promise` of the package response.\r\n */\r\nexport const importCMSCore = async (): CMSCoreImport => {\r\n  const { fsAttributes } = window;\r\n\r\n  fsAttributes.cms ||= {};\r\n  const { cms } = fsAttributes;\r\n\r\n  if (cms.coreImport) return cms.coreImport;\r\n\r\n  try {\r\n    const cmsCoreImport: CMSCoreImport = import(CMS_CORE_SOURCE);\r\n\r\n    cms.coreImport = cmsCoreImport;\r\n\r\n    cmsCoreImport.then((cmsCore) => {\r\n      if (cmsCore) cms.coreVersion ||= cmsCore.version;\r\n    });\r\n\r\n    return cmsCoreImport;\r\n  } catch (error) {\r\n    Debug.alert(`${error}`, 'error');\r\n    return;\r\n  }\r\n};\r\n", "import { extractNumberSuffix } from '@finsweet/ts-utils';\n\n/**\n * Gets the instance index of an element attribute.\n * @example An element with the `fs-copyclip-element=\"trigger-1\"` attribute will return `1` as the instance index.\n * @param element The element to extract the instance index.\n * @param attributeKey The attribute key that holds the instance index.\n */\nexport const getInstanceIndex = (element: Element, attributeKey: string): number | undefined => {\n  const elementValue = element.getAttribute(attributeKey);\n  const instanceIndex = elementValue ? extractNumberSuffix(elementValue) : undefined;\n\n  return instanceIndex;\n};\n", "import { CMS_CSS_CLASSES, CollectionListWrapperElement } from '@finsweet/ts-utils';\n\nimport { CMSList } from '$cms/cmscore/src';\nimport type { CMSCore } from '$cms/cmscore/src/types';\nimport { getInstanceIndex } from '$global/helpers/instances';\n\nimport { ATTRIBUTES, getSelector } from './constants';\n\n/**\n * Populates a Select element's options based on the source values.\n * @param selectElement\n */\nexport const populateSelectElement = (selectElement: HTMLSelectElement, cmsCore: CMSCore) => {\n  const instanceIndex = getInstanceIndex(selectElement, ATTRIBUTES.element.key);\n  const displaySources = getDisplaySources(instanceIndex);\n\n  const listInstances: Set<CMSList> = new Set();\n\n  for (const displaySource of displaySources) {\n    addSelectOption(selectElement, displaySource);\n\n    const collectionListWrapper = displaySource.closest<CollectionListWrapperElement>(`.${CMS_CSS_CLASSES.wrapper}`);\n    if (!collectionListWrapper) continue;\n\n    // TODO: Remove optional chaining after cmscore v1.6.5 has rolled out\n    const listIntance = cmsCore.createCMSListInstance?.(collectionListWrapper);\n    if (!listIntance) continue;\n\n    listInstances.add(listIntance);\n  }\n\n  for (const listInstance of listInstances) {\n    listInstance.on('renderitems', (renderedItems) => {\n      for (const { element } of renderedItems) {\n        const displaySources = getDisplaySources(instanceIndex, element);\n\n        for (const displaySource of displaySources) addSelectOption(selectElement, displaySource);\n      }\n    });\n  }\n\n  return [...listInstances];\n};\n\n/**\n * Queries the display source elements.\n * @param instanceIndex\n * @param scope\n */\nconst getDisplaySources = (instanceIndex: number | undefined, scope: Document | Element = document) => [\n  ...scope.querySelectorAll<HTMLElement>(getSelector('element', 'textValue', { instanceIndex })),\n];\n\n/**\n * Adds a new <option> to the <select> element using a displaySource's text.\n * @param selectElement\n * @param displaySource\n */\nconst addSelectOption = (selectElement: HTMLSelectElement, { innerText }: HTMLElement) => {\n  if (!innerText) return;\n\n  const newOption = new Option(innerText, innerText);\n  selectElement.options.add(newOption);\n};\n", "import { CMSList } from '$cms/cmscore/src';\r\nimport { ATTRIBUTE as CMS_LOAD_ATTRIBUTE } from '$cms/cmsload/src/utils/constants';\r\nimport { importCMSCore } from '$global/import/cmscore';\r\n\r\nimport { ATTRIBUTE, getSelector } from './constants';\r\nimport { populateSelectElement } from './populate';\r\n\r\n/**\r\n * Inits the attribute.\r\n */\r\nexport const init = async (): Promise<CMSList[]> => {\r\n  const cmsCore = await importCMSCore();\r\n  if (!cmsCore) return [];\r\n\r\n  const targetElements = [...document.querySelectorAll(getSelector('element', 'select', { operator: 'prefixed' }))];\r\n\r\n  const listInstancesSet: Set<CMSList> = new Set();\r\n\r\n  for (const targetElement of targetElements) {\r\n    if (!(targetElement instanceof HTMLSelectElement)) continue;\r\n\r\n    const selectElementListInstances = populateSelectElement(targetElement, cmsCore);\r\n\r\n    for (const listIntance of selectElementListInstances) listInstancesSet.add(listIntance);\r\n  }\r\n\r\n  const listInstances = [...listInstancesSet];\r\n\r\n  await window.fsAttributes[CMS_LOAD_ATTRIBUTE]?.loading;\r\n  window.fsAttributes[ATTRIBUTE].resolve?.(listInstances);\r\n\r\n  return listInstances;\r\n};\r\n", "import { assessScript } from '$global/factory/assess';\r\nimport { initAttributes } from '$global/factory/init';\r\n\r\nimport { version } from '../package.json';\r\nimport { ATTRIBUTE } from './constants';\r\nimport { init } from './init';\r\n\r\n/**\r\n * Init\r\n */\r\ninitAttributes();\r\n\r\nwindow.fsAttributes[ATTRIBUTE] ||= {};\r\n\r\nconst { preventsLoad } = assessScript();\r\nconst attribute = window.fsAttributes[ATTRIBUTE];\r\n\r\nattribute.version = version;\r\n\r\nif (preventsLoad) attribute.init = init;\r\nelse {\r\n  window.Webflow ||= [];\r\n  window.Webflow.push(init);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
