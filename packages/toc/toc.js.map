{
  "version": 3,
  "sources": ["../../node_modules/@finsweet/ts-utils/dist/components/Debug.js", "../../node_modules/@finsweet/ts-utils/dist/helpers/extractNumberSuffix.js", "../../global/factory/selectors.ts", "../../global/constants/attributes.ts", "../../global/factory/assess.ts", "../../global/import/support.ts", "../../global/factory/init.ts", "../../global/helpers/instances.ts", "src/utils/constants.ts", "src/utils/helpers.ts", "src/actions/collect.ts", "src/init.ts", "src/index.ts"],
  "sourcesContent": ["const alertTypes = ['info', 'error'];\r\nexport class Debug {\r\n    static alertsActivated = false;\r\n    static activateAlerts() {\r\n        this.alertsActivated = true;\r\n    }\r\n    static alert(text, type) {\r\n        if (this.alertsActivated)\r\n            window.alert(text);\r\n        if (type === 'error')\r\n            throw new Error(text);\r\n    }\r\n}\r\n", "export const extractNumberSuffix = (string) => {\r\n    const splitValue = string.split('-');\r\n    const suffix = parseInt(splitValue[splitValue.length - 1]);\r\n    if (!isNaN(suffix))\r\n        return suffix;\r\n};\r\n", "import type { AttributeOperator, AttributeStaticValue, AttributeValue } from '$global/types/selectors';\n\n/**\n * Creates a dynamic attribute value.\n * @param value The static attribute value.\n * @returns A callback for generating new attribute values by index.\n */\nexport const generateDynamicAttibuteValue = (value: string) => {\n  return (index?: number): string => `${value}${index ? `-${index}` : ''}`;\n};\n\n/**\n * @returns A `getSelector` callback for the passed `attributes` object.\n * @param attributes An object containing all attribute keys and values.\n */\nexport const generateSelectors = <\n  Attributes extends {\n    [name: string]: {\n      key: string;\n      values?: {\n        [valueKey: string]: AttributeValue;\n      };\n    };\n  }\n>(\n  attributes: Attributes\n) => {\n  /**\n   * Generates a query selector based on the preferences.\n   * @param name The name of the attribute.\n   * @param valueKey The value of the attribute.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @returns The query selector based on the preferences.\n   */\n  const getSelector = <Name extends keyof Attributes, ValueKey extends keyof Attributes[Name]['values']>(\n    name: Name,\n    valueKey?: ValueKey,\n    params?: Attributes[Name]['values'][ValueKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        }\n  ): string => {\n    const attribute = attributes[name];\n\n    const { key: attributeKey, values } = attribute;\n    let attributeValue: string;\n\n    if (!valueKey) return `[${attributeKey}]`;\n\n    const value = values?.[valueKey] as AttributeValue;\n\n    if (typeof value === 'string') attributeValue = value;\n    else attributeValue = value(params && 'instanceIndex' in params ? params.instanceIndex : undefined);\n\n    if (!params?.operator) return `[${attributeKey}=\"${attributeValue}\"]`;\n\n    switch (params.operator) {\n      case 'prefixed':\n        return `[${attributeKey}^=\"${attributeValue}\"]`;\n      case 'suffixed':\n        return `[${attributeKey}$=\"${attributeValue}\"]`;\n      case 'contains':\n        return `[${attributeKey}*=\"${attributeValue}\"]`;\n    }\n  };\n\n  /**\n   * Queries an element using the generated element selectors.\n   * @param elementKey The element key.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @param params.scope The scope for the query. Defaults to `document`.\n   */\n  const queryElement = <\n    E extends Element = Element,\n    ElementKey extends keyof Attributes['element']['values'] = keyof Attributes['element']['values']\n  >(\n    elementKey: ElementKey,\n    params?: { scope?: ParentNode } & (Attributes['element']['values'][ElementKey] extends AttributeStaticValue\n      ? {\n          operator?: AttributeOperator;\n        }\n      : {\n          instanceIndex?: number;\n          operator?: AttributeOperator;\n        })\n  ) => {\n    const selector = getSelector('element', elementKey, params);\n\n    return (params?.scope || document).querySelector<E>(selector);\n  };\n\n  return [getSelector, queryElement] as const;\n};\n", "import { generateSelectors } from '$global/factory/selectors';\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const ATTRIBUTES_PREFIX = 'fs-attributes';\r\n\r\nexport const ATTRIBUTES = {\r\n  /**\r\n   * Defines if an Attributes' `<script>` should prevent automatically loading the library.\r\n   */\r\n  preventLoad: { key: `${ATTRIBUTES_PREFIX}-preventload` },\r\n\r\n  /**\r\n   * Defines if an Attributes' `<script>` is set to Debug Mode.\r\n   */\r\n  debugMode: { key: `${ATTRIBUTES_PREFIX}-debug` },\r\n\r\n  /**\r\n   * Defines the source of an attribute script.\r\n   */\r\n  src: { key: 'src', values: { finsweet: '@finsweet/attributes' } },\r\n\r\n  /**\r\n   * Defines a developer script that is not imported from JsDelivr.\r\n   */\r\n  dev: { key: `${ATTRIBUTES_PREFIX}-dev` },\r\n} as const;\r\n\r\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\r\n", "import { Debug } from '@finsweet/ts-utils';\r\n\r\nimport { ATTRIBUTES } from '../constants/attributes';\r\nimport { GlobalAttributeParams } from '../types/global';\r\n\r\n/**\r\n * Checks the global params of the Attribute `<script>`.\r\n * @param script The `<script>` element.\r\n * @returns The {@link GlobalAttributeParams}.\r\n */\r\n\r\nexport const assessScript = (): GlobalAttributeParams => {\r\n  const { currentScript } = document;\r\n  const { preventLoad, debugMode } = ATTRIBUTES;\r\n\r\n  // Check if the Attribute should not be automatically loaded\r\n  const preventsLoad = typeof currentScript?.getAttribute(preventLoad.key) === 'string';\r\n\r\n  // Check if Debug Mode is activated\r\n  if (typeof currentScript?.getAttribute(debugMode.key) === 'string') Debug.activateAlerts();\r\n\r\n  return { preventsLoad };\r\n};\r\n", "import { ATTRIBUTES_PREFIX } from '$global/constants/attributes';\r\n\r\nconst ATTRIBUTES_SUPPORT_QUERY_PARAM = `${ATTRIBUTES_PREFIX}-support`;\r\nconst ATTRIBUTES_SUPPORT_SOURCE = 'https://cdn.jsdelivr.net/npm/@finsweet/attributes-support@1/support.js';\r\n\r\n/**\r\n * Imports the Attributes Support Wizard and mounts it on the page.\r\n * It stores the import as a Promise to ensure it isn't mounted more than once.\r\n *\r\n * @returns A promise that resolves to `true` if the app was successfuly loaded.\r\n */\r\nexport const importSupport = async () => {\r\n  const { fsAttributes, location } = window;\r\n  const { host, searchParams } = new URL(location.href);\r\n\r\n  if (!host.includes('webflow.io') || !searchParams.has(ATTRIBUTES_SUPPORT_QUERY_PARAM)) return false;\r\n\r\n  if (fsAttributes.supportImport) return fsAttributes.supportImport;\r\n\r\n  try {\r\n    fsAttributes.supportImport = new Promise((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n\r\n      script.src = ATTRIBUTES_SUPPORT_SOURCE;\r\n      script.onload = () => resolve(true);\r\n      script.onerror = reject;\r\n\r\n      document.head.append(script);\r\n    });\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n\r\n  return fsAttributes.supportImport;\r\n};\r\n", "import { ATTRIBUTES, getSelector } from '$global/constants/attributes';\r\nimport { importSupport } from '$global/import/support';\r\nimport type { FsAttributes, FsAttributesCallback } from '$global/types/global';\r\n\r\n/**\r\n * Makes sure the window object is defined.\r\n */\r\nexport const initAttributes = () => {\r\n  if (window.fsAttributes && !Array.isArray(window.fsAttributes)) return;\r\n\r\n  const fsAttributes = {\r\n    cms: {},\r\n    push(...args) {\r\n      for (const [attributeName, callback] of args) this[attributeName]?.loading?.then(callback);\r\n    },\r\n  } as FsAttributes;\r\n\r\n  initLoadPromises(fsAttributes);\r\n  runExistingCallbacks(fsAttributes);\r\n\r\n  window.fsAttributes = fsAttributes;\r\n  window.FsAttributes = window.fsAttributes;\r\n\r\n  importSupport();\r\n};\r\n\r\n/**\r\n * Sets a loading promise for each attribute package.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst initLoadPromises = (fsAttributes: FsAttributes) => {\r\n  const srcSelector = getSelector('src', 'finsweet', { operator: 'contains' });\r\n  const devSelector = getSelector('dev');\r\n  const scripts = [...document.querySelectorAll<HTMLScriptElement>(`script${srcSelector}, script${devSelector}`)];\r\n\r\n  const attributes = scripts.reduce<string[]>((acc, script) => {\r\n    const attributeName = script.getAttribute(ATTRIBUTES.dev.key) || script.src.match(/[\\w-. ]+(?=(\\.js)$)/)?.[0];\r\n    if (attributeName && !acc.includes(attributeName)) acc.push(attributeName);\r\n\r\n    return acc;\r\n  }, []);\r\n\r\n  for (const attributeName of attributes) {\r\n    fsAttributes[attributeName] = {};\r\n    const attribute = fsAttributes[attributeName];\r\n\r\n    attribute.loading = new Promise((resolve) => {\r\n      attribute.resolve = (value: unknown) => {\r\n        resolve(value);\r\n        delete attribute.resolve;\r\n      };\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Runs the existing callbacks in the `window.fsAttributes` object.\r\n * @param fsAttributes The {@link FsAttributes} object.\r\n */\r\nconst runExistingCallbacks = (fsAttributes: FsAttributes) => {\r\n  const existingCallbacks = Array.isArray(window.fsAttributes) ? (window.fsAttributes as FsAttributesCallback[]) : [];\r\n  fsAttributes.push(...existingCallbacks);\r\n};\r\n", "import { extractNumberSuffix } from '@finsweet/ts-utils';\n\n/**\n * Gets the instance index of an element attribute.\n * @example An element with the `fs-copyclip-element=\"trigger-1\"` attribute will return `1` as the instance index.\n * @param element The element to extract the instance index.\n * @param attributeKey The attribute key that holds the instance index.\n */\nexport const getInstanceIndex = (element: Element, attributeKey: string): number | undefined => {\n  const elementValue = element.getAttribute(attributeKey);\n  const instanceIndex = elementValue ? extractNumberSuffix(elementValue) : undefined;\n\n  return instanceIndex;\n};\n", "import { generateDynamicAttibuteValue, generateSelectors } from '$global/factory/selectors';\n\nimport { Heading } from './types';\n\nexport const ATTRIBUTE = 'toc';\n\nconst ATTRIBUTES_PREFIX = `fs-${ATTRIBUTE}`;\n\nexport const CONTENTS_ELEMENT_KEY = 'contents';\nexport const LINK_ELEMENT_KEY = 'link';\nexport const IX_TRIGGER_ELEMENT_KEY = 'ix-trigger';\n\nexport const HEADINGS = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] as const;\nexport const HEADING_SETTING_KEY = 'heading';\nexport const HEADING_SETTING_VALUES = Object.fromEntries(HEADINGS.map((heading) => [heading, heading])) as {\n  [key in Heading]: key;\n};\n\nexport const ATTRIBUTES = {\n  element: {\n    key: `${ATTRIBUTES_PREFIX}-element`,\n    values: {\n      /**\n       * Defines the contents to use as the table source.\n       */\n      contents: generateDynamicAttibuteValue(CONTENTS_ELEMENT_KEY),\n\n      /**\n       * Defines a link template element.\n       * If the attribute is set to a non-link element, the library will look up for the first parent element that is a link.\n       */\n      link: generateDynamicAttibuteValue(LINK_ELEMENT_KEY),\n\n      /**\n       * Defines a link template element.\n       * If the attribute is set to a non-link element, the library will look up for the first parent element that is a link.\n       */\n      ixTrigger: IX_TRIGGER_ELEMENT_KEY,\n    },\n  },\n\n  /**\n   * Defines the heading level of a link. If not defined anywhere, the base level defaults to `h2`.\n   */\n  heading: {\n    key: `${ATTRIBUTES_PREFIX}-${HEADING_SETTING_KEY}`,\n    values: HEADING_SETTING_VALUES,\n  },\n} as const;\n\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\n", "/**\r\n * Extracts the heading level from a heading tag.\r\n * @param value The heading tag.\r\n *\r\n * @example ```\r\n * extractHeadingLevel('h2') // 2\r\n * extractHeadingLevel('h5') // 5\r\n * extractHeadingLevel('5') // 5\r\n * extractHeadingLevel('hh') // undefined\r\n * ```\r\n *\r\n */\r\nexport const extractHeadingLevel = (value: string) => {\r\n  const rawLevel = value.match(/\\d/)?.[0];\r\n  if (!rawLevel) return;\r\n\r\n  const level = parseInt(rawLevel);\r\n  if (isNaN(level)) return;\r\n\r\n  return level;\r\n};\r\n", "import { HEADINGS } from '../utils/constants';\r\nimport { extractHeadingLevel } from '../utils/helpers';\r\nimport type { HeadingData } from '../utils/types';\r\n\r\n/**\r\n * Collects the {@link HeadingData} of all heading elements.\r\n * @param contentsElement The element that holds all the contents.\r\n *\r\n * @returns A {@link HeadingData} array\r\n */\r\nexport const collectHeadingsData = (contentsElement: HTMLElement) => {\r\n  const headingsData: HeadingData[] = [];\r\n  const levelsMemo: HeadingData[] = [];\r\n\r\n  const headingElements = contentsElement.querySelectorAll<HTMLHeadingElement>(HEADINGS.join(','));\r\n\r\n  for (const headingElement of headingElements) {\r\n    const { tagName } = headingElement;\r\n\r\n    const level = extractHeadingLevel(tagName);\r\n    if (!level) continue;\r\n\r\n    const headingData: HeadingData = {\r\n      level,\r\n      headingElement,\r\n      children: [],\r\n    };\r\n\r\n    let levelMemo: HeadingData | undefined;\r\n\r\n    for (let i = levelsMemo.length - 1; i >= 0; i--) {\r\n      levelMemo = levelsMemo[i];\r\n\r\n      if (level > levelMemo.level) break;\r\n\r\n      levelsMemo.pop();\r\n    }\r\n\r\n    if (!levelMemo) {\r\n      headingsData.push(headingData);\r\n      levelsMemo.push(headingData);\r\n      continue;\r\n    }\r\n\r\n    levelMemo.children.push(headingData);\r\n    if (level > levelMemo.level) levelsMemo.push(headingData);\r\n  }\r\n\r\n  return headingsData;\r\n};\r\n", "import { cloneNode } from '@finsweet/ts-utils';\n\nimport { getInstanceIndex } from '$global/helpers/instances';\n\nimport { collectHeadingsData } from './actions/collect';\nimport { ATTRIBUTES, getSelector, queryElement } from './utils/constants';\nimport { extractHeadingLevel } from './utils/helpers';\nimport { HeadingData, LinkData } from './utils/types';\n\n/**\n * Inits the attribute.\n */\nexport const init = (): void => {\n  const contentsElements = document.querySelectorAll<HTMLElement>(\n    getSelector('element', 'contents', { operator: 'prefixed' })\n  );\n\n  for (const contentsElement of contentsElements) {\n    const instanceIndex = getInstanceIndex(contentsElement, ATTRIBUTES.element.key);\n    const linkTemplate = queryElement('link', { instanceIndex });\n    if (!linkTemplate) continue;\n\n    const headingsData = collectHeadingsData(contentsElement);\n    const templateLinksData = collectTemplateLinksData(linkTemplate);\n\n    if (!headingsData.length || !templateLinksData) continue;\n\n    console.log({ linkTemplate, headingsData, templateLinksData });\n  }\n};\n\nconst collectTemplateLinksData = (linkTemplate: Element) => {\n  const linksData: LinkData[] = [];\n\n  const collectLinkData = (referenceNode: Element) => {\n    const linkElement = referenceNode.closest('a');\n    if (!linkElement) return;\n\n    const { parentElement } = linkElement;\n    if (!parentElement) return;\n\n    const previousLevel = linksData[linksData.length - 1]?.level;\n    const subsequentLevel = previousLevel ? previousLevel + 1 : 2;\n    const rawLevel = referenceNode.getAttribute(ATTRIBUTES.heading.key);\n\n    let level = rawLevel ? extractHeadingLevel(rawLevel) : subsequentLevel;\n    if (!level) return;\n\n    // Make sure there are no level duplicates\n    if (linksData.find((linkData) => linkData.level === level)) level = subsequentLevel;\n\n    const ixTrigger = parentElement.querySelector<HTMLElement>(`:scope > ${ATTRIBUTES.element.values.ixTrigger}`);\n\n    linksData.push({\n      linkElement,\n      level,\n      parentElement,\n      ixTrigger,\n    });\n\n    // Get next link data\n    const followingTextNodes = [...parentElement.querySelectorAll(`* ${getSelector('element', 'link')}`)];\n    const followingTextNode = followingTextNodes.find((node) => node !== referenceNode);\n\n    if (followingTextNode) collectLinkData(followingTextNode);\n  };\n\n  // Init collection\n  collectLinkData(linkTemplate);\n\n  if (!linksData.length) return;\n\n  // Get the table wrapper\n  const [{ parentElement }] = linksData;\n  const tableWrapper = parentElement.parentElement;\n  if (!tableWrapper) return;\n\n  return [linksData, tableWrapper] as const;\n};\n\nconst populateLinks = (headingsData: HeadingData[], linksData: LinkData[], parentWrapper: HTMLElement) => {\n  let levelMemo: LinkData | undefined;\n\n  for (const { headingElement, level, children } of headingsData) {\n    if (headingElement) {\n      const linkData = linksData.find((data) => data.level === level);\n      if (!linkData) continue;\n\n      const linkElement = cloneNode(linkData.linkElement);\n      const parentElement = levelMemo ? levelMemo.parentElement : parentWrapper;\n    }\n  }\n};\n", "import { assessScript } from '$global/factory/assess';\r\nimport { initAttributes } from '$global/factory/init';\r\n\r\nimport { version } from '../package.json';\r\nimport { init } from './init';\r\nimport { ATTRIBUTE } from './utils/constants';\r\n\r\n/**\r\n * Init\r\n */\r\ninitAttributes();\r\n\r\nwindow.fsAttributes[ATTRIBUTE] ||= {};\r\n\r\nconst { preventsLoad } = assessScript();\r\nconst attribute = window.fsAttributes[ATTRIBUTE];\r\n\r\nattribute.version = version;\r\n\r\nif (preventsLoad) attribute.init = init;\r\nelse {\r\n  window.Webflow ||= [];\r\n  window.Webflow.push(init);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
