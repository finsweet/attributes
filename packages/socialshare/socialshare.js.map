{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@finsweet+ts-utils@0.33.1/node_modules/@finsweet/ts-utils/dist/components/Debug.js", "../../node_modules/.pnpm/@finsweet+ts-utils@0.33.1/node_modules/@finsweet/ts-utils/dist/helpers/extractNumberSuffix.js", "../../global/constants/attributes.ts", "../../global/factory/selectors.ts", "../../global/factory/constants.ts", "../../global/factory/assess.ts", "../../global/import/support.ts", "../../global/factory/init.ts", "../../node_modules/@finsweet/ts-utils/dist/webflow/css.js", "../../global/helpers/instances.ts", "src/utils/constants.ts", "src/actions/collect.ts", "src/factory.ts", "src/init.ts", "src/index.ts"],
  "sourcesContent": ["// Constants\r\nconst alertTypes = ['info', 'error'];\r\nexport class Debug {\r\n    static alertsActivated = false;\r\n    static activateAlerts() {\r\n        this.alertsActivated = true;\r\n    }\r\n    static alert(text, type) {\r\n        if (this.alertsActivated)\r\n            window.alert(text);\r\n        if (type === 'error')\r\n            throw new Error(text);\r\n    }\r\n}\r\n", "/**\r\n * Finds if a string is suffixed by `-X` and returns the value of `X`.\r\n * @example `click-2` will return `2`.\r\n * @example `click` will return `undefined`.\r\n * @param string The string to extract.\r\n * @returns The number suffix, if found.\r\n */\r\nexport const extractNumberSuffix = (string) => {\r\n    const splitValue = string.split('-');\r\n    const suffix = parseInt(splitValue[splitValue.length - 1]);\r\n    if (!isNaN(suffix))\r\n        return suffix;\r\n};\r\n", "export const ATTRIBUTES_PREFIX = 'fs-attributes';\n", "import type { AttributeOperator, AttributeStaticValue, AttributeValue } from './types';\n\n/**\n * Creates a dynamic attribute value.\n * @param value The static attribute value.\n * @returns A callback for generating new attribute values by index.\n */\nexport const generateDynamicAttibuteValue = (value: string) => {\n  return (index?: number): string => `${value}${index ? `-${index}` : ''}`;\n};\n\n/**\n * @returns A `getSelector` callback for the passed `attributes` object.\n * @param attributes An object containing all attribute keys and values.\n */\nexport const generateSelectors = <\n  Attributes extends {\n    [name: string]: {\n      key: string;\n      values?: {\n        [valueKey: string]: AttributeValue;\n      };\n    };\n  }\n>(\n  attributes: Attributes\n) => {\n  type AttributesValues = Attributes['element']['values'];\n  type AttributesValuesKeys = keyof AttributesValues;\n  type AttributeStaticParams = {\n    operator?: AttributeOperator;\n  };\n  type AttributeDynamicParams = AttributeStaticParams & {\n    instanceIndex?: number;\n  };\n\n  /**\n   * Generates a query selector based on the preferences.\n   * @param name The name of the attribute.\n   * @param valueKey The value of the attribute.\n   * @param params.index Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @returns The query selector based on the preferences.\n   */\n  const getSelector = <Name extends keyof Attributes, ValueKey extends keyof Attributes[Name]['values']>(\n    name: Name,\n    valueKey?: ValueKey,\n    params?: Attributes[Name]['values'][ValueKey] extends AttributeStaticValue\n      ? AttributeStaticParams\n      : AttributeDynamicParams\n  ): string => {\n    const attribute = attributes[name];\n\n    const { key: attributeKey, values } = attribute;\n    let attributeValue: string;\n\n    if (!valueKey) return `[${attributeKey}]`;\n\n    const value = values?.[valueKey] as AttributeValue;\n\n    if (typeof value === 'string') attributeValue = value;\n    else attributeValue = value(params && 'instanceIndex' in params ? params.instanceIndex : undefined);\n\n    if (!params?.operator) return `[${attributeKey}=\"${attributeValue}\"]`;\n\n    switch (params.operator) {\n      case 'prefixed':\n        return `[${attributeKey}^=\"${attributeValue}\"]`;\n      case 'suffixed':\n        return `[${attributeKey}$=\"${attributeValue}\"]`;\n      case 'contains':\n        return `[${attributeKey}*=\"${attributeValue}\"]`;\n    }\n  };\n\n  /**\n   * Queries an element using the generated element selectors.\n   * @param elementKey The element key.\n   * @param params.instanceIndex Only accepted when the value is dynamic.\n   * @param params.operator Optional operator for the selector.\n   * @param params.scope The scope for the query. Defaults to `document`.\n   * @param params.all determines if array of matched elements should be returned.\n   */\n  function queryElement<E extends Element = Element, ElementKey extends AttributesValuesKeys = AttributesValuesKeys>(\n    elementKey: ElementKey,\n    params?: {\n      scope?: ParentNode;\n      all?: false;\n    } & (AttributesValues[ElementKey] extends AttributeStaticValue ? AttributeStaticParams : AttributeDynamicParams)\n  ): E | null;\n  function queryElement<E extends Element = Element, ElementKey extends AttributesValuesKeys = AttributesValuesKeys>(\n    elementKey: ElementKey,\n    params?: {\n      scope?: ParentNode;\n      all: true;\n    } & (AttributesValues[ElementKey] extends AttributeStaticValue ? AttributeStaticParams : AttributeDynamicParams)\n  ): NodeListOf<E>;\n  function queryElement<E extends Element = Element, ElementKey extends AttributesValuesKeys = AttributesValuesKeys>(\n    elementKey: ElementKey,\n    params?: {\n      scope?: ParentNode;\n      all?: boolean;\n    } & (AttributesValues[ElementKey] extends AttributeStaticValue ? AttributeStaticParams : AttributeDynamicParams)\n  ): NodeListOf<E> | E | null {\n    const selector = getSelector('element', elementKey, params);\n    const scope = params?.scope || document;\n\n    return params?.all ? scope.querySelectorAll<E>(selector) : scope.querySelector<E>(selector);\n  }\n\n  return [getSelector, queryElement] as const;\n};\n", "import { ATTRIBUTES_PREFIX } from '@global/constants/attributes';\n\nimport { generateSelectors } from './selectors';\n\n/**\n * Constants\n */\nexport const ATTRIBUTES = {\n  /**\n   * Defines if an Attributes' `<script>` should prevent automatically loading the library.\n   */\n  preventLoad: { key: `${ATTRIBUTES_PREFIX}-preventload` },\n\n  /**\n   * Defines if an Attributes' `<script>` is set to Debug Mode.\n   */\n  debugMode: { key: `${ATTRIBUTES_PREFIX}-debug` },\n\n  /**\n   * Defines the source of an attribute script.\n   */\n  src: { key: 'src', values: { finsweet: '@finsweet/attributes' } },\n\n  /**\n   * Defines a developer script that is not imported from JsDelivr.\n   */\n  dev: { key: `${ATTRIBUTES_PREFIX}-dev` },\n} as const;\n\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\n", "import { Debug } from '@finsweet/ts-utils';\n\nimport { ATTRIBUTES } from './constants';\nimport type { GlobalAttributeParams } from './types';\n\n/**\n * Checks the global params of the Attribute `<script>`.\n * @param script The `<script>` element.\n * @returns The {@link GlobalAttributeParams}.\n */\n\nexport const assessScript = (): GlobalAttributeParams => {\n  const { currentScript } = document;\n  const { preventLoad, debugMode } = ATTRIBUTES;\n\n  // Check if the Attribute should not be automatically loaded\n  const preventsLoad = typeof currentScript?.getAttribute(preventLoad.key) === 'string';\n\n  // Check if Debug Mode is activated\n  if (typeof currentScript?.getAttribute(debugMode.key) === 'string') Debug.activateAlerts();\n\n  return { preventsLoad };\n};\n", "import { ATTRIBUTES_PREFIX } from '@global/constants/attributes';\n\nconst ATTRIBUTES_SUPPORT_QUERY_PARAM = `${ATTRIBUTES_PREFIX}-support`;\nconst ATTRIBUTES_SUPPORT_SOURCE = 'https://cdn.jsdelivr.net/npm/@finsweet/attributes-support@1/support.js';\n\n/**\n * Imports the Attributes Support Wizard and mounts it on the page.\n * It stores the import as a Promise to ensure it isn't mounted more than once.\n *\n * @returns A promise that resolves to `true` if the app was successfuly loaded.\n */\nexport const importSupport = async () => {\n  const { fsAttributes, location } = window;\n  const { host, searchParams } = new URL(location.href);\n\n  if (!host.includes('webflow.io') || !searchParams.has(ATTRIBUTES_SUPPORT_QUERY_PARAM)) return false;\n\n  if (fsAttributes.supportImport) return fsAttributes.supportImport;\n\n  try {\n    fsAttributes.supportImport = new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n\n      script.src = ATTRIBUTES_SUPPORT_SOURCE;\n      script.onload = () => resolve(true);\n      script.onerror = reject;\n\n      document.head.append(script);\n    });\n  } catch (error) {\n    return false;\n  }\n\n  return fsAttributes.supportImport;\n};\n", "import { importSupport } from '@global/import';\n\nimport { ATTRIBUTES, getSelector } from './constants';\n\ntype FsAttributes = typeof window.fsAttributes;\n\n/**\n * Makes sure the window object is defined.\n */\nexport const initAttributes = () => {\n  if (window.fsAttributes && !Array.isArray(window.fsAttributes)) return;\n\n  const fsAttributes = {\n    cms: {},\n    push(...args) {\n      for (const [attributeName, callback] of args) this[attributeName]?.loading?.then(callback);\n    },\n  } as FsAttributes;\n\n  initLoadPromises(fsAttributes);\n  runExistingCallbacks(fsAttributes);\n\n  window.fsAttributes = fsAttributes;\n  window.FsAttributes = window.fsAttributes;\n\n  importSupport();\n};\n\n/**\n * Sets a loading promise for each attribute package.\n * @param fsAttributes The {@link FsAttributes} object.\n */\nconst initLoadPromises = (fsAttributes: FsAttributes) => {\n  const srcSelector = getSelector('src', 'finsweet', { operator: 'contains' });\n  const devSelector = getSelector('dev');\n  const scripts = [...document.querySelectorAll<HTMLScriptElement>(`script${srcSelector}, script${devSelector}`)];\n\n  const attributes = scripts.reduce<string[]>((acc, script) => {\n    const attributeName = script.getAttribute(ATTRIBUTES.dev.key) || script.src.match(/[\\w-. ]+(?=(\\.js)$)/)?.[0];\n    if (attributeName && !acc.includes(attributeName)) acc.push(attributeName);\n\n    return acc;\n  }, []);\n\n  for (const attributeName of attributes) {\n    fsAttributes[attributeName] = {};\n    const attribute = fsAttributes[attributeName];\n\n    attribute.loading = new Promise((resolve) => {\n      attribute.resolve = (value: unknown) => {\n        resolve(value);\n        delete attribute.resolve;\n      };\n    });\n  }\n};\n\n/**\n * Runs the existing callbacks in the `window.fsAttributes` object.\n * @param fsAttributes The {@link FsAttributes} object.\n */\nconst runExistingCallbacks = (fsAttributes: FsAttributes) => {\n  const existingCallbacks = Array.isArray(window.fsAttributes)\n    ? (window.fsAttributes as Parameters<FsAttributes['push']>)\n    : [];\n  fsAttributes.push(...existingCallbacks);\n};\n", "export const CURRENT_CSS_CLASS = 'w--current';\r\nexport const RICH_TEXT_BLOCK_CSS_CLASS = 'w-richtext';\r\nexport const HTML_EMBED_CSS_CLASS = 'w-embed';\r\nexport const SLIDER_CSS_CLASSES = {\r\n    slider: 'w-slider',\r\n    slide: 'w-slide',\r\n    sliderMask: 'w-slider-mask',\r\n    sliderNav: 'w-slider-nav',\r\n    sliderDot: 'w-slider-dot',\r\n    activeSliderDot: 'w-active',\r\n};\r\nexport const TABS_CSS_CLASSES = {\r\n    tabs: 'w-tabs',\r\n    tabsContent: 'w-tab-content',\r\n    tabPane: 'w-tab-pane',\r\n    tabsMenu: 'w-tab-menu',\r\n    tabLink: 'w-tab-link',\r\n    activeTab: 'w--tab-active',\r\n};\r\nexport const NAVBAR_CSS_CLASSES = {\r\n    navMenu: 'w-nav-menu',\r\n};\r\nexport const CMS_CSS_CLASSES = {\r\n    wrapper: 'w-dyn-list',\r\n    list: 'w-dyn-items',\r\n    item: 'w-dyn-item',\r\n    paginationWrapper: 'w-pagination-wrapper',\r\n    paginationNext: 'w-pagination-next',\r\n    paginationPrevious: 'w-pagination-previous',\r\n    pageCount: 'w-page-count',\r\n    emptyState: 'w-dyn-empty',\r\n};\r\nexport const FORM_CSS_CLASSES = {\r\n    formBlock: 'w-form',\r\n    checkboxField: 'w-checkbox',\r\n    checkboxInput: 'w-checkbox-input',\r\n    radioField: 'w-radio',\r\n    radioInput: 'w-radio-input',\r\n    checkboxOrRadioLabel: 'w-form-label',\r\n    checkboxOrRadioFocus: 'w--redirected-focus',\r\n    checkboxOrRadioChecked: 'w--redirected-checked',\r\n    successMessage: 'w-form-done',\r\n    errorMessage: 'w-form-fail',\r\n};\r\nexport const DROPDOWN_CSS_CLASSES = {\r\n    dropdown: 'w-dropdown',\r\n    dropdownToggle: 'w-dropdown-toggle',\r\n    dropdownList: 'w-dropdown-list',\r\n};\r\nexport const COMMERCE_CSS_CLASSES = {\r\n    addToCartForm: 'w-commerce-commerceaddtocartform',\r\n};\r\nexport const LIGHTBOX_CSS_CLASSES = {\r\n    trigger: 'w-lightbox',\r\n};\r\n", "import { extractNumberSuffix } from '@finsweet/ts-utils';\n\n/**\n * Gets the instance index of an element attribute.\n * @example An element with the `fs-copyclip-element=\"trigger-1\"` attribute will return `1` as the instance index.\n * @param element The element to extract the instance index.\n * @param attributeKey The attribute key that holds the instance index.\n */\nexport const getInstanceIndex = (element: Element, attributeKey: string): number | undefined => {\n  const elementValue = element.getAttribute(attributeKey);\n  const instanceIndex = elementValue ? extractNumberSuffix(elementValue) : undefined;\n\n  return instanceIndex;\n};\n", "import { generateSelectors, generateDynamicAttibuteValue } from '@global/factory';\n\nexport const ATTRIBUTE = 'socialshare';\n\nconst ATTRIBUTES_PREFIX = `fs-${ATTRIBUTE}`;\n\nexport const FACEBOOK_ELEMENT_KEY = 'facebook';\nexport const TWITTER_ELEMENT_KEY = 'twitter';\nexport const PINTEREST_ELEMENT_KEY = 'pinterest';\nexport const LINKEDIN_ELEMENT_KEY = 'linkedin';\nexport const TELEGRAM_ELEMENT_KEY = 'telegram';\nexport const REDDIT_ELEMENT_KEY = 'reddit';\nexport const CONTENT_ELEMENT_KEY = 'content';\nexport const URL_ELEMENT_KEY = 'url';\nexport const FACEBOOK_HASHTAG_ELEMENT_KEY = 'facebook-hashtags';\nexport const TWITTER_HASHTAG_ELEMENT_KEY = 'twitter-hashtags';\nexport const TWITTER_USERNAME_ELEMENT_KEY = 'twitter-username';\nexport const PINTEREST_IMAGE_ELEMENT_KEY = 'pinterest-image';\nexport const PINTEREST_DESCRIPTION_ELEMENT_KEY = 'pinterest-description';\nexport const WIDTH_SETTING_KEY = 'width';\nexport const DEFAULT_WIDTH_SETTING_KEY = 600;\nexport const HEIGHT_SETTING_KEY = 'height';\nexport const DEFAULT_HEIGHT_SETTING_KEY = 480;\n\nexport const ATTRIBUTES = {\n  element: {\n    key: `${ATTRIBUTES_PREFIX}-element`,\n    values: {\n      /**\n       * Defines an Facebook social button\n       */\n      facebook: generateDynamicAttibuteValue(FACEBOOK_ELEMENT_KEY),\n      /**\n       * Defines an Twitter social button\n       */\n      twitter: generateDynamicAttibuteValue(TWITTER_ELEMENT_KEY),\n      /**\n       * Defines an Pinterest social button\n       */\n      pinterest: generateDynamicAttibuteValue(PINTEREST_ELEMENT_KEY),\n      /**\n       * Defines an Linked In social button\n       */\n      linkedin: generateDynamicAttibuteValue(LINKEDIN_ELEMENT_KEY),\n      /**\n       * Defines an Telegram social button\n       */\n      telegram: generateDynamicAttibuteValue(TELEGRAM_ELEMENT_KEY),\n      /**\n       * Defines an Reedit social button\n       */\n      reedit: generateDynamicAttibuteValue(REDDIT_ELEMENT_KEY),\n      /**\n       * Defines the Content to be share into social media\n       */\n      content: generateDynamicAttibuteValue(CONTENT_ELEMENT_KEY),\n      /**\n       * Defines a custom URL to be share into social media\n       */\n      url: generateDynamicAttibuteValue(URL_ELEMENT_KEY),\n      /**\n       * Defines Facebook hashtags\n       */\n      facebookHashtags: generateDynamicAttibuteValue(FACEBOOK_HASHTAG_ELEMENT_KEY),\n      /**\n       * Defines Twitter hashtags\n       */\n      twitterHashtags: generateDynamicAttibuteValue(TWITTER_HASHTAG_ELEMENT_KEY),\n      /**\n       * Defines Twitter username\n       */\n      twitterUsername: generateDynamicAttibuteValue(TWITTER_USERNAME_ELEMENT_KEY),\n      /**\n       * Defines Pinterest image\n       */\n      pinterestImage: generateDynamicAttibuteValue(PINTEREST_IMAGE_ELEMENT_KEY),\n      /**\n       * Defines Pinterest description\n       */\n      pinterestDescription: generateDynamicAttibuteValue(PINTEREST_DESCRIPTION_ELEMENT_KEY),\n    },\n  },\n\n  /**\n   * Defines a setting example definition.\n   */\n\n  width: {\n    key: `${ATTRIBUTES_PREFIX}-${HEIGHT_SETTING_KEY}`,\n    default: DEFAULT_WIDTH_SETTING_KEY,\n  },\n  height: {\n    key: `${ATTRIBUTES_PREFIX}-${WIDTH_SETTING_KEY}`,\n    default: DEFAULT_HEIGHT_SETTING_KEY,\n  },\n} as const;\n\nexport const [getSelector, queryElement] = generateSelectors(ATTRIBUTES);\n", "import { queryElement, ATTRIBUTES } from './../utils/constants';\nimport type {\n  FacebookSocialShare,\n  TwitterSocialShare,\n  PinterestSocialShare,\n  SocialShare,\n  SocialShareTypes,\n} from './../utils/types';\n\nexport function collectFacebookData(\n  instanceIndex: number | undefined,\n  scope: HTMLElement | undefined\n): FacebookSocialShare | null {\n  const facebookButton = collectSocialData('facebook', instanceIndex, scope);\n\n  if (facebookButton === null) {\n    return null;\n  }\n\n  const hashtagsElement = queryElement<HTMLElement>('facebookHashtags', { instanceIndex, operator: 'prefixed', scope });\n  const hashtagsText = hashtagsElement ? hashtagsElement.innerText : null;\n\n  return {\n    ...facebookButton,\n    type: 'facebook',\n    hashtags: hashtagsText,\n  };\n}\n\nexport function collectTwitterData(\n  instanceIndex: number | undefined,\n  scope: HTMLElement | undefined\n): TwitterSocialShare | null {\n  const twitterButton = collectSocialData('twitter', instanceIndex, scope);\n\n  if (twitterButton === null) {\n    return null;\n  }\n\n  const hashtagsElement = queryElement<HTMLElement>('twitterHashtags', { instanceIndex, operator: 'prefixed', scope });\n  const hashtagsText = hashtagsElement ? hashtagsElement.innerText : null;\n\n  const usernameElement = queryElement<HTMLElement>('twitterUsername', { instanceIndex, operator: 'prefixed', scope });\n  const userNameText = usernameElement ? usernameElement.innerText : null;\n\n  return {\n    ...twitterButton,\n    type: 'twitter',\n    hashtags: hashtagsText,\n    username: userNameText,\n  };\n}\n\nexport function collectPinterestData(\n  instanceIndex: number | undefined,\n  scope: HTMLElement | undefined\n): PinterestSocialShare | null {\n  const pinterestButton = collectSocialData('pinterest', instanceIndex, scope);\n\n  if (pinterestButton === null) {\n    return null;\n  }\n\n  const imageElement = queryElement<HTMLElement>('pinterestImage', { instanceIndex, operator: 'prefixed', scope });\n  const imageText = imageElement ? imageElement.innerText : null;\n\n  const descriptionElement = queryElement<HTMLElement>('pinterestDescription', {\n    instanceIndex,\n    operator: 'prefixed',\n    scope,\n  });\n  const descriptioText = descriptionElement ? descriptionElement.innerText : null;\n\n  return {\n    ...pinterestButton,\n    type: 'pinterest',\n    image: imageText,\n    description: descriptioText,\n  };\n}\n\nexport function collectSocialData(\n  elementKey: SocialShareTypes,\n  instanceIndex: number | undefined,\n  scope: HTMLElement | undefined\n): SocialShare | null {\n  const socialShareButton = queryElement<HTMLElement>(elementKey, { instanceIndex, operator: 'prefixed', scope });\n\n  if (!socialShareButton) {\n    return null;\n  }\n\n  const width = collectSize(socialShareButton, ATTRIBUTES.width.key, ATTRIBUTES.width.default);\n  const height = collectSize(socialShareButton, ATTRIBUTES.height.key, ATTRIBUTES.height.default);\n\n  return {\n    button: socialShareButton,\n    width,\n    height,\n    type: elementKey,\n  };\n}\n\nexport function collectSize(button: HTMLElement, selector: string, defaultValue: number): number {\n  const buttonWidth = button.getAttribute(selector);\n\n  if (buttonWidth) {\n    return parseInt(buttonWidth);\n  }\n\n  const closestElementWidth = button.closest(`[${selector}]`);\n\n  if (!closestElementWidth) {\n    return defaultValue;\n  }\n\n  const closestWidth = closestElementWidth.getAttribute(selector);\n\n  if (!closestWidth) {\n    return defaultValue;\n  }\n\n  return parseInt(closestWidth);\n}\n", "import type { FacebookSocialShare, PinterestSocialShare, SocialShare, TwitterSocialShare } from './utils/types';\n\nconst FACEBOOK_URL = 'https://www.facebook.com/sharer/sharer.php';\nconst TWITTER_URL = 'https://twitter.com/intent/tweet/';\nconst PINTEREST_URL = 'https://www.pinterest.com/pin/create/button/';\nconst REDDIT_URL = 'https://www.reddit.com/submit';\nconst LINKEDIN_URL = 'https://www.linkedin.com//sharing/share-offsite';\nconst TELEGRAM_URL = 'https://t.me/share';\n\nexport function socialShareFactory(\n  content: string,\n  url: string,\n  facebook: FacebookSocialShare | null,\n  twitter: TwitterSocialShare | null,\n  pinterest: PinterestSocialShare | null,\n  reddit: SocialShare | null,\n  telegram: SocialShare | null,\n  linkedin: SocialShare | null\n) {\n  if (facebook) {\n    createSocialShare(\n      facebook.button,\n      FACEBOOK_URL,\n      { u: url, hashtag: facebook.hashtags, quote: content },\n      facebook.width,\n      facebook.height\n    );\n  }\n\n  if (twitter) {\n    createSocialShare(\n      twitter.button,\n      TWITTER_URL,\n      {\n        text: content,\n        via: twitter.username,\n        hashtags: twitter.hashtags,\n        url,\n      },\n      twitter.width,\n      twitter.height\n    );\n  }\n\n  if (pinterest) {\n    createSocialShare(\n      pinterest.button,\n      PINTEREST_URL,\n      {\n        url,\n        media: pinterest.image,\n        description: pinterest.description,\n      },\n      pinterest.width,\n      pinterest.height\n    );\n  }\n\n  if (reddit) {\n    createSocialShare(\n      reddit.button,\n      REDDIT_URL,\n      {\n        url,\n        title: content,\n      },\n      reddit.width,\n      reddit.height\n    );\n  }\n\n  if (telegram) {\n    createSocialShare(\n      telegram.button,\n      TELEGRAM_URL,\n      {\n        text: content,\n        url,\n      },\n      telegram.width,\n      telegram.height\n    );\n  }\n\n  if (linkedin) {\n    createSocialShare(linkedin.button, LINKEDIN_URL, { url }, linkedin.width, linkedin.height);\n  }\n}\n\nfunction createSocialShare(\n  button: HTMLElement,\n  urlSocialMedia: string,\n  params: { [key: string]: string | null },\n  width: number,\n  height: number\n): void {\n  button.addEventListener('click', function () {\n    const notNullParams: { [key: string]: string } = Object.keys(params)\n      .filter((paramKey: string) => params[paramKey] !== null)\n      .reduce((newParams, paramKey: string) => {\n        return {\n          ...newParams,\n          [paramKey]: params[paramKey],\n        };\n      }, {});\n\n    const urlParams = new URLSearchParams(notNullParams).toString();\n\n    const shareUrl = urlSocialMedia + (urlParams ? '?' + urlParams : '');\n\n    const left = window.innerWidth / 2 - width / 2 + window.screenX;\n    const top = window.innerHeight / 2 - height / 2 + window.screenY;\n    const popParams = `scrollbars=no, width=${width}, height=${height}, top=${top}, left=${left}`;\n    const newWindow = window.open(shareUrl, '', popParams);\n\n    if (newWindow) {\n      newWindow.focus();\n    }\n  });\n}\n", "// import { logHello } from './actions/console';\n// import { getInstanceIndex } from '@global/helpers';\nimport { CMS_CSS_CLASSES } from '@finsweet/ts-utils';\nimport { getInstanceIndex } from '@global/helpers';\n\nimport { collectFacebookData, collectPinterestData, collectSocialData, collectTwitterData } from './actions/collect';\nimport { socialShareFactory } from './factory';\nimport { ATTRIBUTES, queryElement } from './utils/constants';\n\n// Constants destructuring\nconst {\n  element: { key: elementKey },\n} = ATTRIBUTES;\n\n/**\n * Inits the attribute.\n */\nexport const init = (): void => {\n  const contentElements = queryElement<HTMLElement>('content', { operator: 'prefixed', all: true });\n\n  contentElements.forEach((contentElement) => {\n    const instanceIndex = getInstanceIndex(contentElement, elementKey);\n\n    const cmsListItem = contentElement.closest<HTMLElement>(`.${CMS_CSS_CLASSES.item}`) || undefined;\n\n    const urlElement = queryElement<HTMLElement>('url', { operator: 'prefixed', scope: cmsListItem });\n\n    const facebook = collectFacebookData(instanceIndex, cmsListItem);\n    const twitter = collectTwitterData(instanceIndex, cmsListItem);\n    const pinterest = collectPinterestData(instanceIndex, cmsListItem);\n    const reddit = collectSocialData('reedit', instanceIndex, cmsListItem);\n    const linkedin = collectSocialData('linkedin', instanceIndex, cmsListItem);\n    const telegram = collectSocialData('telegram', instanceIndex, cmsListItem);\n\n    const contentText = contentElement.innerText;\n    const contentUrl = urlElement ? urlElement.innerText : window.location.href;\n\n    socialShareFactory(contentText, contentUrl, facebook, twitter, pinterest, reddit, telegram, linkedin);\n  });\n};\n", "import { assessScript, initAttributes } from '@global/factory';\n\nimport { version } from '../package.json';\nimport { init } from './init';\nimport { ATTRIBUTE } from './utils/constants';\n\n/**\n * Init\n */\ninitAttributes();\n\nwindow.fsAttributes[ATTRIBUTE] ||= {};\n\nconst { preventsLoad } = assessScript();\nconst attribute = window.fsAttributes[ATTRIBUTE];\n\nattribute.version = version;\n\nif (preventsLoad) attribute.init = init;\nelse {\n  window.Webflow ||= [];\n  window.Webflow.push(init);\n}\n"],
  "mappings": "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",
  "names": []
}
