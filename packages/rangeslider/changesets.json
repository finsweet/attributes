[{"version":"v1.3.1","date":"29 November 2021","markdown":"- Added support for handling [Floating-Point precision issues](https://floating-point-gui.de/).\r\n- Fixed an infinite loop being sometimes triggered during the `handle` - `input` update cycles.\r\n"},{"version":"v1.3.0","date":"29 November 2021","markdown":"- Created `changesets.json` API.\r\n"},{"version":"v1.2.0","date":"28 November 2021","markdown":"- Released `v1.2.0-beta`.\r\n"},{"version":"v1.2.0-beta.0","date":"27 November 2021","markdown":"- Added support for the range slider being initially hidden on page load. Now the library will recalculate the range slider's position whenever its visibility changes.\r\n- Added new `fs-rangeslider-update` attribute: setting this attribute to the `wrapper` element, allows users to define when should the `<input>` elements' value be updated:\r\n\r\n  - `fs-rangeslider-update=\"move\"`: The value of the `<input>` elements will be update on every single move of a `handle`.\r\n  - `fs-rangeslider-update=\"release\"`: The value of the `<input>` elements will only be updated when the user releases the mouse/finger from the `handle`. This is very useful for use cases like `cmsfilter`, where we don't want to be constantly triggering a new filter cycle when the user is still moving the `handle`.\r\n    On the other hand, the `display-value` elements will still be updated real-time.\r\n\r\n  When not specified, defaults to `fs-rangeslider-update=\"move\"`.\r\n"},{"version":"v1.1.2","date":"15 November 2021","markdown":"- Reduced `resize` debouncing from 100ms to 50ms.\r\n"},{"version":"v1.1.1","date":"15 November 2021","markdown":"- Added `examples.json` to the package.\r\n"},{"version":"v1.1.0","date":"15 November 2021","markdown":"- Added new `fs-rangefilter-formatdisplay=\"true\"` attribute.\r\n  Now, by default all `fs-rangefilter-element=\"display-value\"` elements will display the numeric value without formatting.\r\n  If the `formatdisplay` attribute is added to the `wrapper` element, the `display-value` elements will display a formatted value (formatting defaults to the user's country conventions, some countries use commas and other countries use dots).\r\n- Added an extra check to make sure the Handles' start values are adjusted to the `step` increment coefficient.\r\n- Added an extra rule to set the Handles' start value to the `minRange` or `maxRange` if the provided value doesn't match the range. When this happens, a custom `Debug` message will be displayed to warn the user when using `debugMode`.\r\n- Added an extra `Debug` alert that warns the user when the provided `step` value doesn't fit the provided `[min,max]` range.\r\n"},{"version":"v1.0.1","date":"15 November 2021","markdown":"- Made sure the track is set to `position: relative` and the Handles & Fill have the correct `position: absolute` values.\r\n"},{"version":"v1.0.0","date":"15 November 2021","markdown":"- Released `v1.0.0-beta` features.\r\n- Added support to recalculate the range slider position on window `resize` events.\r\n- Removed dependency on `Emittery`, reduced the package size from 14KB to 9KB.\r\n- Internal refactoring and performance improvements.\r\n"},{"version":"v1.0.0-beta.8","date":"14 November 2021","markdown":"- Fixed values not being correctly calculated when the `min range` was set to a different value than 0.\r\n"},{"version":"v1.0.0-beta.7","date":"14 November 2021","markdown":"- Fixed `v1.0.0-beta.6` code not being included in the build. Ooops!\r\n"},{"version":"v1.0.0-beta.6","date":"14 November 2021","markdown":"- Improved `mousedown` boundaries to correctly pick the handles when they are located at the ends of the track.\r\n"},{"version":"v1.0.0-beta.5","date":"14 November 2021","markdown":"- Added locale converter to the `display-value` element.\r\n"},{"version":"v1.0.0-beta.4","date":"13 November 2021","markdown":"- Added `fs-rangeslider-element=\"display-value\"` attribute.\r\n"},{"version":"v1.0.0-beta.3","date":"13 November 2021","markdown":"- Fixed `Handle.handleInputChange` issue.\r\n"},{"version":"v1.0.0-beta.2","date":"13 November 2021","markdown":"- Switched `input` event listeners on Handles to `change` events to avoid collisions with other solutions like `cmsfilter`.\r\n"},{"version":"v1.0.0-beta.1","date":"13 November 2021","markdown":"- Added two way binding with the `<input>` elements.\r\n  Now any `input` event that is emitted from the elements will automatically update the value of the correspondent Handle.\r\n"},{"version":"v1.0.0-beta.0","date":"13 October 2021","markdown":"- Created the attribute package.\r\n"}]